# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # Details of the usage restrictions such as day/week/month value and volume
  # restrictions applied on the card.
  class UsageRestriction < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Usage limit is applied on the card from this level.
    # Valid values –
    # •	Inherited
    # •	Card
    # When Card level usage restrictions are not present, the API will return
    # the inherited restrictions.
    # Note: -This field is deprecated. Instead, use ‘Override’.
    # @return [String]
    attr_accessor :level

    # Maximum spend value (amount) allowed per day. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :daily_spend

    # Balance spend value (amount) available for rest of the day.
    # @return [Float]
    attr_accessor :daily_spend_accumulated

    # Balance spend value (amount) available for rest of the day.
    # @return [Float]
    attr_accessor :daily_spend_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :daily_spend_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # @return [Float]
    attr_accessor :daily_spend_threshold

    # Maximum spend value (amount) allowed per week. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :weekly_spend

    # Value (amount) spent during the week.
    # @return [Float]
    attr_accessor :weekly_spend_accumulated

    # Balance spend value (amount) available for rest of the week.
    # @return [Float]
    attr_accessor :weekly_spend_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :weekly_spend_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :weekly_spend_threshold

    # Maximum spend value (amount) allowed per month. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :monthly_spend

    # Value (amount) spent during the month.
    # @return [Float]
    attr_accessor :monthly_spend_accumulated

    # Balance spend value (amount) available for rest of the month.
    # @return [Float]
    attr_accessor :monthly_spend_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :monthly_spend_override

    # Maximum spend value (amount) allowed per transaction. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :per_transaction_spend

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :per_transaction_spend_override

    # Maximum spend value (amount) allowed per annum. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :annual_spend

    # Value (amount) spent during the year.
    # @return [Float]
    attr_accessor :annual_spend_accumulated

    # Balance spend value (amount) available for rest of the year.
    # @return [Float]
    attr_accessor :annual_spend_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :annual_spend_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :annual_spend_threshold

    # Maximum spend value (amount) allowed in card’s life time. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited
    # @return [Float]
    attr_accessor :life_time_spend

    # Value (amount) spent during the card’s life time
    # @return [Float]
    attr_accessor :life_time_spend_accumulated

    # Balance spend value (amount) available for rest of the card’s life time.
    # @return [Float]
    attr_accessor :life_time_spend_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :life_time_spend_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :life_time_spend_threshold

    # Maximum volume (quantity) allowed per day. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :daily_volume

    # Volume (quantity) bought during the day.
    # @return [Float]
    attr_accessor :daily_volume_accumulated

    # Balance volume (quantity) available for rest of the day.
    # @return [Float]
    attr_accessor :daily_volume_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [Float]
    attr_accessor :daily_volume_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :daily_volume_threshold

    # Maximum volume (quantity) allowed per week. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :weekly_volume

    # Volume (quantity) bought during the week.
    # @return [Float]
    attr_accessor :weekly_volume_accumulated

    # Balance volume (quantity) available for rest of the week.
    # @return [Float]
    attr_accessor :weekly_volume_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :weekly_volume_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :weekly_volume_threshold

    # Maximum volume (quantity) allowed per month. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :monthly_volume

    # Volume (quantity) bought during the month.
    # @return [Float]
    attr_accessor :monthly_volume_accumulated

    # Balance volume (quantity) available for rest of the month.
    # @return [Float]
    attr_accessor :monthly_volume_balance

    # Indicate if the limit is overridden or default. (False for default).
    # @return [TrueClass | FalseClass]
    attr_accessor :monthly_volume_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :monthly_volume_threshold

    # Maximum volume (quantity) allowed per transaction. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :per_transaction_volume

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :per_transaction_volume_override

    # Maximum volume (quantity) allowed per annum. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :annual_volume

    # Volume (quantity) bought during the year.
    # @return [Float]
    attr_accessor :annual_volume_accumulated

    # Balance volume (quantity) available for rest of the year.
    # @return [Float]
    attr_accessor :annual_volume_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :annual_volume_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :annual_volume_threshold

    # Maximum volume (quantity) allowed in the card’s life time. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :life_time_volume

    # Volume (quantity) bought during the card’s life time.
    # @return [Float]
    attr_accessor :life_time_volume_accumulated

    # Balance volume (quantity) available for rest of the card’s life time.
    # @return [Float]
    attr_accessor :life_time_volume_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :life_time_volume_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :life_time_volume_threshold

    # Maximum number of transactions allowed per day. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited
    # @return [Float]
    attr_accessor :daily_transaction_count

    # Number of times the card is used during the day.
    # @return [Float]
    attr_accessor :daily_transaction_accumulated

    # Number of times the card could be used in rest of the day.
    # @return [Float]
    attr_accessor :daily_transaction_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :daily_transaction_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :daily_transaction_threshold

    # Maximum number of transactions allowed per week. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :weekly_transaction_count

    # Number of times the card is used during the week
    # @return [Float]
    attr_accessor :weekly_transaction_accumulated

    # Number of times the card could be used in rest of the week.
    # @return [Float]
    attr_accessor :weekly_transaction_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :weekly_transaction_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :weekly_transaction_threshold

    # Maximum number of transactions allowed per month. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :monthly_transaction_count

    # Number of times the card is used during the month
    # @return [Float]
    attr_accessor :monthly_transaction_accumulated

    # Number of times the card could be used in rest of the month.
    # @return [Float]
    attr_accessor :monthly_transaction_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :monthly_transaction_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :monthly_transaction_threshold

    # Maximum number of transactions allowed per annum. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # @return [Float]
    attr_accessor :annual_transaction_count

    # Number of times the card is used during the year.
    # @return [Float]
    attr_accessor :annual_transaction_accumulated

    # Number of times the card could be used in rest of the year.
    # @return [Float]
    attr_accessor :annual_transaction_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :annual_transaction_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :annual_transaction_threshold

    # Maximum number of transactions allowed in the card’s life time. 
    # Card limit ‘0’ represents the value is inherited and inherited limit could
    # be calculated by adding accumulated and balance.
    # However, Inherited limit ‘0’ represents unlimited.
    # @return [Float]
    attr_accessor :life_time_transaction_count

    # Number of times the card is used during the card’s life time.
    # @return [Float]
    attr_accessor :life_time_transaction_accumulated

    # Number of times the card could be used in rest of the card’s life time.
    # @return [Float]
    attr_accessor :life_time_transaction_balance

    # Indicate if the limit is overridden or default. (False for default). 
    # Example: false
    # @return [TrueClass | FalseClass]
    attr_accessor :life_time_transaction_override

    # The limit to trigger an alert if the balance after a transaction reaches
    # it or below. 0 indicates no alerts will be sent. Not present if not set
    # (issuer value threshold limit applies if available). Not present for COUNT
    # type velocity.
    # Example: 50.55
    # This is an optional output field.
    # @return [Float]
    attr_accessor :life_time_transaction_threshold

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['level'] = 'Level'
      @_hash['daily_spend'] = 'DailySpend'
      @_hash['daily_spend_accumulated'] = 'DailySpendAccumulated'
      @_hash['daily_spend_balance'] = 'DailySpendBalance'
      @_hash['daily_spend_override'] = 'DailySpendOverride'
      @_hash['daily_spend_threshold'] = 'DailySpendThreshold'
      @_hash['weekly_spend'] = 'WeeklySpend'
      @_hash['weekly_spend_accumulated'] = 'WeeklySpendAccumulated'
      @_hash['weekly_spend_balance'] = 'WeeklySpendBalance'
      @_hash['weekly_spend_override'] = 'WeeklySpendOverride'
      @_hash['weekly_spend_threshold'] = 'WeeklySpendThreshold'
      @_hash['monthly_spend'] = 'MonthlySpend'
      @_hash['monthly_spend_accumulated'] = 'MonthlySpendAccumulated'
      @_hash['monthly_spend_balance'] = 'MonthlySpendBalance'
      @_hash['monthly_spend_override'] = 'MonthlySpendOverride'
      @_hash['per_transaction_spend'] = 'PerTransactionSpend'
      @_hash['per_transaction_spend_override'] = 'PerTransactionSpendOverride'
      @_hash['annual_spend'] = 'AnnualSpend'
      @_hash['annual_spend_accumulated'] = 'AnnualSpendAccumulated'
      @_hash['annual_spend_balance'] = 'AnnualSpendBalance'
      @_hash['annual_spend_override'] = 'AnnualSpendOverride'
      @_hash['annual_spend_threshold'] = 'AnnualSpendThreshold'
      @_hash['life_time_spend'] = 'LifeTimeSpend'
      @_hash['life_time_spend_accumulated'] = 'LifeTimeSpendAccumulated'
      @_hash['life_time_spend_balance'] = 'LifeTimeSpendBalance'
      @_hash['life_time_spend_override'] = 'LifeTimeSpendOverride'
      @_hash['life_time_spend_threshold'] = 'LifeTimeSpendThreshold'
      @_hash['daily_volume'] = 'DailyVolume'
      @_hash['daily_volume_accumulated'] = 'DailyVolumeAccumulated'
      @_hash['daily_volume_balance'] = 'DailyVolumeBalance'
      @_hash['daily_volume_override'] = 'DailyVolumeOverride'
      @_hash['daily_volume_threshold'] = 'DailyVolumeThreshold'
      @_hash['weekly_volume'] = 'WeeklyVolume'
      @_hash['weekly_volume_accumulated'] = 'WeeklyVolumeAccumulated'
      @_hash['weekly_volume_balance'] = 'WeeklyVolumeBalance'
      @_hash['weekly_volume_override'] = 'WeeklyVolumeOverride'
      @_hash['weekly_volume_threshold'] = 'WeeklyVolumeThreshold'
      @_hash['monthly_volume'] = 'MonthlyVolume'
      @_hash['monthly_volume_accumulated'] = 'MonthlyVolumeAccumulated'
      @_hash['monthly_volume_balance'] = 'MonthlyVolumeBalance'
      @_hash['monthly_volume_override'] = 'MonthlyVolumeOverride'
      @_hash['monthly_volume_threshold'] = 'MonthlyVolumeThreshold'
      @_hash['per_transaction_volume'] = 'PerTransactionVolume'
      @_hash['per_transaction_volume_override'] =
        'PerTransactionVolumeOverride'
      @_hash['annual_volume'] = 'AnnualVolume'
      @_hash['annual_volume_accumulated'] = 'AnnualVolumeAccumulated'
      @_hash['annual_volume_balance'] = 'AnnualVolumeBalance'
      @_hash['annual_volume_override'] = 'AnnualVolumeOverride'
      @_hash['annual_volume_threshold'] = 'AnnualVolumeThreshold'
      @_hash['life_time_volume'] = 'LifeTimeVolume'
      @_hash['life_time_volume_accumulated'] = 'LifeTimeVolumeAccumulated'
      @_hash['life_time_volume_balance'] = 'LifeTimeVolumeBalance'
      @_hash['life_time_volume_override'] = 'LifeTimeVolumeOverride'
      @_hash['life_time_volume_threshold'] = 'LifeTimeVolumeThreshold'
      @_hash['daily_transaction_count'] = 'DailyTransactionCount'
      @_hash['daily_transaction_accumulated'] = 'DailyTransactionAccumulated'
      @_hash['daily_transaction_balance'] = 'DailyTransactionBalance'
      @_hash['daily_transaction_override'] = 'DailyTransactionOverride'
      @_hash['daily_transaction_threshold'] = 'DailyTransactionThreshold'
      @_hash['weekly_transaction_count'] = 'WeeklyTransactionCount'
      @_hash['weekly_transaction_accumulated'] =
        'WeeklyTransactionAccumulated'
      @_hash['weekly_transaction_balance'] = 'WeeklyTransactionBalance'
      @_hash['weekly_transaction_override'] = 'WeeklyTransactionOverride'
      @_hash['weekly_transaction_threshold'] = 'WeeklyTransactionThreshold'
      @_hash['monthly_transaction_count'] = 'MonthlyTransactionCount'
      @_hash['monthly_transaction_accumulated'] =
        'MonthlyTransactionAccumulated'
      @_hash['monthly_transaction_balance'] = 'MonthlyTransactionBalance'
      @_hash['monthly_transaction_override'] = 'MonthlyTransactionOverride'
      @_hash['monthly_transaction_threshold'] = 'MonthlyTransactionThreshold'
      @_hash['annual_transaction_count'] = 'AnnualTransactionCount'
      @_hash['annual_transaction_accumulated'] =
        'AnnualTransactionAccumulated'
      @_hash['annual_transaction_balance'] = 'AnnualTransactionBalance'
      @_hash['annual_transaction_override'] = 'AnnualTransactionOverride'
      @_hash['annual_transaction_threshold'] = 'AnnualTransactionThreshold'
      @_hash['life_time_transaction_count'] = 'LifeTimeTransactionCount'
      @_hash['life_time_transaction_accumulated'] =
        'LifeTimeTransactionAccumulated'
      @_hash['life_time_transaction_balance'] = 'LifeTimeTransactionBalance'
      @_hash['life_time_transaction_override'] = 'LifeTimeTransactionOverride'
      @_hash['life_time_transaction_threshold'] =
        'LifeTimeTransactionThreshold'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        level
        daily_spend
        daily_spend_accumulated
        daily_spend_balance
        daily_spend_override
        daily_spend_threshold
        weekly_spend
        weekly_spend_accumulated
        weekly_spend_balance
        weekly_spend_override
        weekly_spend_threshold
        monthly_spend
        monthly_spend_accumulated
        monthly_spend_balance
        monthly_spend_override
        per_transaction_spend
        per_transaction_spend_override
        annual_spend
        annual_spend_accumulated
        annual_spend_balance
        annual_spend_override
        annual_spend_threshold
        life_time_spend
        life_time_spend_accumulated
        life_time_spend_balance
        life_time_spend_override
        life_time_spend_threshold
        daily_volume
        daily_volume_accumulated
        daily_volume_balance
        daily_volume_override
        daily_volume_threshold
        weekly_volume
        weekly_volume_accumulated
        weekly_volume_balance
        weekly_volume_override
        weekly_volume_threshold
        monthly_volume
        monthly_volume_accumulated
        monthly_volume_balance
        monthly_volume_override
        monthly_volume_threshold
        per_transaction_volume
        per_transaction_volume_override
        annual_volume
        annual_volume_accumulated
        annual_volume_balance
        annual_volume_override
        annual_volume_threshold
        life_time_volume
        life_time_volume_accumulated
        life_time_volume_balance
        life_time_volume_override
        life_time_volume_threshold
        daily_transaction_count
        daily_transaction_accumulated
        daily_transaction_balance
        daily_transaction_override
        daily_transaction_threshold
        weekly_transaction_count
        weekly_transaction_accumulated
        weekly_transaction_balance
        weekly_transaction_override
        weekly_transaction_threshold
        monthly_transaction_count
        monthly_transaction_accumulated
        monthly_transaction_balance
        monthly_transaction_override
        monthly_transaction_threshold
        annual_transaction_count
        annual_transaction_accumulated
        annual_transaction_balance
        annual_transaction_override
        annual_transaction_threshold
        life_time_transaction_count
        life_time_transaction_accumulated
        life_time_transaction_balance
        life_time_transaction_override
        life_time_transaction_threshold
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(level = SKIP, daily_spend = SKIP,
                   daily_spend_accumulated = SKIP, daily_spend_balance = SKIP,
                   daily_spend_override = SKIP, daily_spend_threshold = SKIP,
                   weekly_spend = SKIP, weekly_spend_accumulated = SKIP,
                   weekly_spend_balance = SKIP, weekly_spend_override = SKIP,
                   weekly_spend_threshold = SKIP, monthly_spend = SKIP,
                   monthly_spend_accumulated = SKIP,
                   monthly_spend_balance = SKIP, monthly_spend_override = SKIP,
                   per_transaction_spend = SKIP,
                   per_transaction_spend_override = SKIP, annual_spend = SKIP,
                   annual_spend_accumulated = SKIP, annual_spend_balance = SKIP,
                   annual_spend_override = SKIP, annual_spend_threshold = SKIP,
                   life_time_spend = SKIP, life_time_spend_accumulated = SKIP,
                   life_time_spend_balance = SKIP,
                   life_time_spend_override = SKIP,
                   life_time_spend_threshold = SKIP, daily_volume = SKIP,
                   daily_volume_accumulated = SKIP, daily_volume_balance = SKIP,
                   daily_volume_override = SKIP, daily_volume_threshold = SKIP,
                   weekly_volume = SKIP, weekly_volume_accumulated = SKIP,
                   weekly_volume_balance = SKIP, weekly_volume_override = SKIP,
                   weekly_volume_threshold = SKIP, monthly_volume = SKIP,
                   monthly_volume_accumulated = SKIP,
                   monthly_volume_balance = SKIP,
                   monthly_volume_override = SKIP,
                   monthly_volume_threshold = SKIP,
                   per_transaction_volume = SKIP,
                   per_transaction_volume_override = SKIP, annual_volume = SKIP,
                   annual_volume_accumulated = SKIP,
                   annual_volume_balance = SKIP, annual_volume_override = SKIP,
                   annual_volume_threshold = SKIP, life_time_volume = SKIP,
                   life_time_volume_accumulated = SKIP,
                   life_time_volume_balance = SKIP,
                   life_time_volume_override = SKIP,
                   life_time_volume_threshold = SKIP,
                   daily_transaction_count = SKIP,
                   daily_transaction_accumulated = SKIP,
                   daily_transaction_balance = SKIP,
                   daily_transaction_override = SKIP,
                   daily_transaction_threshold = SKIP,
                   weekly_transaction_count = SKIP,
                   weekly_transaction_accumulated = SKIP,
                   weekly_transaction_balance = SKIP,
                   weekly_transaction_override = SKIP,
                   weekly_transaction_threshold = SKIP,
                   monthly_transaction_count = SKIP,
                   monthly_transaction_accumulated = SKIP,
                   monthly_transaction_balance = SKIP,
                   monthly_transaction_override = SKIP,
                   monthly_transaction_threshold = SKIP,
                   annual_transaction_count = SKIP,
                   annual_transaction_accumulated = SKIP,
                   annual_transaction_balance = SKIP,
                   annual_transaction_override = SKIP,
                   annual_transaction_threshold = SKIP,
                   life_time_transaction_count = SKIP,
                   life_time_transaction_accumulated = SKIP,
                   life_time_transaction_balance = SKIP,
                   life_time_transaction_override = SKIP,
                   life_time_transaction_threshold = SKIP)
      @level = level unless level == SKIP
      @daily_spend = daily_spend unless daily_spend == SKIP
      @daily_spend_accumulated = daily_spend_accumulated unless daily_spend_accumulated == SKIP
      @daily_spend_balance = daily_spend_balance unless daily_spend_balance == SKIP
      @daily_spend_override = daily_spend_override unless daily_spend_override == SKIP
      @daily_spend_threshold = daily_spend_threshold unless daily_spend_threshold == SKIP
      @weekly_spend = weekly_spend unless weekly_spend == SKIP
      @weekly_spend_accumulated = weekly_spend_accumulated unless weekly_spend_accumulated == SKIP
      @weekly_spend_balance = weekly_spend_balance unless weekly_spend_balance == SKIP
      @weekly_spend_override = weekly_spend_override unless weekly_spend_override == SKIP
      @weekly_spend_threshold = weekly_spend_threshold unless weekly_spend_threshold == SKIP
      @monthly_spend = monthly_spend unless monthly_spend == SKIP
      unless monthly_spend_accumulated == SKIP
        @monthly_spend_accumulated =
          monthly_spend_accumulated
      end
      @monthly_spend_balance = monthly_spend_balance unless monthly_spend_balance == SKIP
      @monthly_spend_override = monthly_spend_override unless monthly_spend_override == SKIP
      @per_transaction_spend = per_transaction_spend unless per_transaction_spend == SKIP
      unless per_transaction_spend_override == SKIP
        @per_transaction_spend_override =
          per_transaction_spend_override
      end
      @annual_spend = annual_spend unless annual_spend == SKIP
      @annual_spend_accumulated = annual_spend_accumulated unless annual_spend_accumulated == SKIP
      @annual_spend_balance = annual_spend_balance unless annual_spend_balance == SKIP
      @annual_spend_override = annual_spend_override unless annual_spend_override == SKIP
      @annual_spend_threshold = annual_spend_threshold unless annual_spend_threshold == SKIP
      @life_time_spend = life_time_spend unless life_time_spend == SKIP
      unless life_time_spend_accumulated == SKIP
        @life_time_spend_accumulated =
          life_time_spend_accumulated
      end
      @life_time_spend_balance = life_time_spend_balance unless life_time_spend_balance == SKIP
      @life_time_spend_override = life_time_spend_override unless life_time_spend_override == SKIP
      unless life_time_spend_threshold == SKIP
        @life_time_spend_threshold =
          life_time_spend_threshold
      end
      @daily_volume = daily_volume unless daily_volume == SKIP
      @daily_volume_accumulated = daily_volume_accumulated unless daily_volume_accumulated == SKIP
      @daily_volume_balance = daily_volume_balance unless daily_volume_balance == SKIP
      @daily_volume_override = daily_volume_override unless daily_volume_override == SKIP
      @daily_volume_threshold = daily_volume_threshold unless daily_volume_threshold == SKIP
      @weekly_volume = weekly_volume unless weekly_volume == SKIP
      unless weekly_volume_accumulated == SKIP
        @weekly_volume_accumulated =
          weekly_volume_accumulated
      end
      @weekly_volume_balance = weekly_volume_balance unless weekly_volume_balance == SKIP
      @weekly_volume_override = weekly_volume_override unless weekly_volume_override == SKIP
      @weekly_volume_threshold = weekly_volume_threshold unless weekly_volume_threshold == SKIP
      @monthly_volume = monthly_volume unless monthly_volume == SKIP
      unless monthly_volume_accumulated == SKIP
        @monthly_volume_accumulated =
          monthly_volume_accumulated
      end
      @monthly_volume_balance = monthly_volume_balance unless monthly_volume_balance == SKIP
      @monthly_volume_override = monthly_volume_override unless monthly_volume_override == SKIP
      @monthly_volume_threshold = monthly_volume_threshold unless monthly_volume_threshold == SKIP
      @per_transaction_volume = per_transaction_volume unless per_transaction_volume == SKIP
      unless per_transaction_volume_override == SKIP
        @per_transaction_volume_override =
          per_transaction_volume_override
      end
      @annual_volume = annual_volume unless annual_volume == SKIP
      unless annual_volume_accumulated == SKIP
        @annual_volume_accumulated =
          annual_volume_accumulated
      end
      @annual_volume_balance = annual_volume_balance unless annual_volume_balance == SKIP
      @annual_volume_override = annual_volume_override unless annual_volume_override == SKIP
      @annual_volume_threshold = annual_volume_threshold unless annual_volume_threshold == SKIP
      @life_time_volume = life_time_volume unless life_time_volume == SKIP
      unless life_time_volume_accumulated == SKIP
        @life_time_volume_accumulated =
          life_time_volume_accumulated
      end
      @life_time_volume_balance = life_time_volume_balance unless life_time_volume_balance == SKIP
      unless life_time_volume_override == SKIP
        @life_time_volume_override =
          life_time_volume_override
      end
      unless life_time_volume_threshold == SKIP
        @life_time_volume_threshold =
          life_time_volume_threshold
      end
      @daily_transaction_count = daily_transaction_count unless daily_transaction_count == SKIP
      unless daily_transaction_accumulated == SKIP
        @daily_transaction_accumulated =
          daily_transaction_accumulated
      end
      unless daily_transaction_balance == SKIP
        @daily_transaction_balance =
          daily_transaction_balance
      end
      unless daily_transaction_override == SKIP
        @daily_transaction_override =
          daily_transaction_override
      end
      unless daily_transaction_threshold == SKIP
        @daily_transaction_threshold =
          daily_transaction_threshold
      end
      @weekly_transaction_count = weekly_transaction_count unless weekly_transaction_count == SKIP
      unless weekly_transaction_accumulated == SKIP
        @weekly_transaction_accumulated =
          weekly_transaction_accumulated
      end
      unless weekly_transaction_balance == SKIP
        @weekly_transaction_balance =
          weekly_transaction_balance
      end
      unless weekly_transaction_override == SKIP
        @weekly_transaction_override =
          weekly_transaction_override
      end
      unless weekly_transaction_threshold == SKIP
        @weekly_transaction_threshold =
          weekly_transaction_threshold
      end
      unless monthly_transaction_count == SKIP
        @monthly_transaction_count =
          monthly_transaction_count
      end
      unless monthly_transaction_accumulated == SKIP
        @monthly_transaction_accumulated =
          monthly_transaction_accumulated
      end
      unless monthly_transaction_balance == SKIP
        @monthly_transaction_balance =
          monthly_transaction_balance
      end
      unless monthly_transaction_override == SKIP
        @monthly_transaction_override =
          monthly_transaction_override
      end
      unless monthly_transaction_threshold == SKIP
        @monthly_transaction_threshold =
          monthly_transaction_threshold
      end
      @annual_transaction_count = annual_transaction_count unless annual_transaction_count == SKIP
      unless annual_transaction_accumulated == SKIP
        @annual_transaction_accumulated =
          annual_transaction_accumulated
      end
      unless annual_transaction_balance == SKIP
        @annual_transaction_balance =
          annual_transaction_balance
      end
      unless annual_transaction_override == SKIP
        @annual_transaction_override =
          annual_transaction_override
      end
      unless annual_transaction_threshold == SKIP
        @annual_transaction_threshold =
          annual_transaction_threshold
      end
      unless life_time_transaction_count == SKIP
        @life_time_transaction_count =
          life_time_transaction_count
      end
      unless life_time_transaction_accumulated == SKIP
        @life_time_transaction_accumulated =
          life_time_transaction_accumulated
      end
      unless life_time_transaction_balance == SKIP
        @life_time_transaction_balance =
          life_time_transaction_balance
      end
      unless life_time_transaction_override == SKIP
        @life_time_transaction_override =
          life_time_transaction_override
      end
      unless life_time_transaction_threshold == SKIP
        @life_time_transaction_threshold =
          life_time_transaction_threshold
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      level = hash.key?('Level') ? hash['Level'] : SKIP
      daily_spend = hash.key?('DailySpend') ? hash['DailySpend'] : SKIP
      daily_spend_accumulated =
        hash.key?('DailySpendAccumulated') ? hash['DailySpendAccumulated'] : SKIP
      daily_spend_balance =
        hash.key?('DailySpendBalance') ? hash['DailySpendBalance'] : SKIP
      daily_spend_override =
        hash.key?('DailySpendOverride') ? hash['DailySpendOverride'] : SKIP
      daily_spend_threshold =
        hash.key?('DailySpendThreshold') ? hash['DailySpendThreshold'] : SKIP
      weekly_spend = hash.key?('WeeklySpend') ? hash['WeeklySpend'] : SKIP
      weekly_spend_accumulated =
        hash.key?('WeeklySpendAccumulated') ? hash['WeeklySpendAccumulated'] : SKIP
      weekly_spend_balance =
        hash.key?('WeeklySpendBalance') ? hash['WeeklySpendBalance'] : SKIP
      weekly_spend_override =
        hash.key?('WeeklySpendOverride') ? hash['WeeklySpendOverride'] : SKIP
      weekly_spend_threshold =
        hash.key?('WeeklySpendThreshold') ? hash['WeeklySpendThreshold'] : SKIP
      monthly_spend = hash.key?('MonthlySpend') ? hash['MonthlySpend'] : SKIP
      monthly_spend_accumulated =
        hash.key?('MonthlySpendAccumulated') ? hash['MonthlySpendAccumulated'] : SKIP
      monthly_spend_balance =
        hash.key?('MonthlySpendBalance') ? hash['MonthlySpendBalance'] : SKIP
      monthly_spend_override =
        hash.key?('MonthlySpendOverride') ? hash['MonthlySpendOverride'] : SKIP
      per_transaction_spend =
        hash.key?('PerTransactionSpend') ? hash['PerTransactionSpend'] : SKIP
      per_transaction_spend_override =
        hash.key?('PerTransactionSpendOverride') ? hash['PerTransactionSpendOverride'] : SKIP
      annual_spend = hash.key?('AnnualSpend') ? hash['AnnualSpend'] : SKIP
      annual_spend_accumulated =
        hash.key?('AnnualSpendAccumulated') ? hash['AnnualSpendAccumulated'] : SKIP
      annual_spend_balance =
        hash.key?('AnnualSpendBalance') ? hash['AnnualSpendBalance'] : SKIP
      annual_spend_override =
        hash.key?('AnnualSpendOverride') ? hash['AnnualSpendOverride'] : SKIP
      annual_spend_threshold =
        hash.key?('AnnualSpendThreshold') ? hash['AnnualSpendThreshold'] : SKIP
      life_time_spend =
        hash.key?('LifeTimeSpend') ? hash['LifeTimeSpend'] : SKIP
      life_time_spend_accumulated =
        hash.key?('LifeTimeSpendAccumulated') ? hash['LifeTimeSpendAccumulated'] : SKIP
      life_time_spend_balance =
        hash.key?('LifeTimeSpendBalance') ? hash['LifeTimeSpendBalance'] : SKIP
      life_time_spend_override =
        hash.key?('LifeTimeSpendOverride') ? hash['LifeTimeSpendOverride'] : SKIP
      life_time_spend_threshold =
        hash.key?('LifeTimeSpendThreshold') ? hash['LifeTimeSpendThreshold'] : SKIP
      daily_volume = hash.key?('DailyVolume') ? hash['DailyVolume'] : SKIP
      daily_volume_accumulated =
        hash.key?('DailyVolumeAccumulated') ? hash['DailyVolumeAccumulated'] : SKIP
      daily_volume_balance =
        hash.key?('DailyVolumeBalance') ? hash['DailyVolumeBalance'] : SKIP
      daily_volume_override =
        hash.key?('DailyVolumeOverride') ? hash['DailyVolumeOverride'] : SKIP
      daily_volume_threshold =
        hash.key?('DailyVolumeThreshold') ? hash['DailyVolumeThreshold'] : SKIP
      weekly_volume = hash.key?('WeeklyVolume') ? hash['WeeklyVolume'] : SKIP
      weekly_volume_accumulated =
        hash.key?('WeeklyVolumeAccumulated') ? hash['WeeklyVolumeAccumulated'] : SKIP
      weekly_volume_balance =
        hash.key?('WeeklyVolumeBalance') ? hash['WeeklyVolumeBalance'] : SKIP
      weekly_volume_override =
        hash.key?('WeeklyVolumeOverride') ? hash['WeeklyVolumeOverride'] : SKIP
      weekly_volume_threshold =
        hash.key?('WeeklyVolumeThreshold') ? hash['WeeklyVolumeThreshold'] : SKIP
      monthly_volume = hash.key?('MonthlyVolume') ? hash['MonthlyVolume'] : SKIP
      monthly_volume_accumulated =
        hash.key?('MonthlyVolumeAccumulated') ? hash['MonthlyVolumeAccumulated'] : SKIP
      monthly_volume_balance =
        hash.key?('MonthlyVolumeBalance') ? hash['MonthlyVolumeBalance'] : SKIP
      monthly_volume_override =
        hash.key?('MonthlyVolumeOverride') ? hash['MonthlyVolumeOverride'] : SKIP
      monthly_volume_threshold =
        hash.key?('MonthlyVolumeThreshold') ? hash['MonthlyVolumeThreshold'] : SKIP
      per_transaction_volume =
        hash.key?('PerTransactionVolume') ? hash['PerTransactionVolume'] : SKIP
      per_transaction_volume_override =
        hash.key?('PerTransactionVolumeOverride') ? hash['PerTransactionVolumeOverride'] : SKIP
      annual_volume = hash.key?('AnnualVolume') ? hash['AnnualVolume'] : SKIP
      annual_volume_accumulated =
        hash.key?('AnnualVolumeAccumulated') ? hash['AnnualVolumeAccumulated'] : SKIP
      annual_volume_balance =
        hash.key?('AnnualVolumeBalance') ? hash['AnnualVolumeBalance'] : SKIP
      annual_volume_override =
        hash.key?('AnnualVolumeOverride') ? hash['AnnualVolumeOverride'] : SKIP
      annual_volume_threshold =
        hash.key?('AnnualVolumeThreshold') ? hash['AnnualVolumeThreshold'] : SKIP
      life_time_volume =
        hash.key?('LifeTimeVolume') ? hash['LifeTimeVolume'] : SKIP
      life_time_volume_accumulated =
        hash.key?('LifeTimeVolumeAccumulated') ? hash['LifeTimeVolumeAccumulated'] : SKIP
      life_time_volume_balance =
        hash.key?('LifeTimeVolumeBalance') ? hash['LifeTimeVolumeBalance'] : SKIP
      life_time_volume_override =
        hash.key?('LifeTimeVolumeOverride') ? hash['LifeTimeVolumeOverride'] : SKIP
      life_time_volume_threshold =
        hash.key?('LifeTimeVolumeThreshold') ? hash['LifeTimeVolumeThreshold'] : SKIP
      daily_transaction_count =
        hash.key?('DailyTransactionCount') ? hash['DailyTransactionCount'] : SKIP
      daily_transaction_accumulated =
        hash.key?('DailyTransactionAccumulated') ? hash['DailyTransactionAccumulated'] : SKIP
      daily_transaction_balance =
        hash.key?('DailyTransactionBalance') ? hash['DailyTransactionBalance'] : SKIP
      daily_transaction_override =
        hash.key?('DailyTransactionOverride') ? hash['DailyTransactionOverride'] : SKIP
      daily_transaction_threshold =
        hash.key?('DailyTransactionThreshold') ? hash['DailyTransactionThreshold'] : SKIP
      weekly_transaction_count =
        hash.key?('WeeklyTransactionCount') ? hash['WeeklyTransactionCount'] : SKIP
      weekly_transaction_accumulated =
        hash.key?('WeeklyTransactionAccumulated') ? hash['WeeklyTransactionAccumulated'] : SKIP
      weekly_transaction_balance =
        hash.key?('WeeklyTransactionBalance') ? hash['WeeklyTransactionBalance'] : SKIP
      weekly_transaction_override =
        hash.key?('WeeklyTransactionOverride') ? hash['WeeklyTransactionOverride'] : SKIP
      weekly_transaction_threshold =
        hash.key?('WeeklyTransactionThreshold') ? hash['WeeklyTransactionThreshold'] : SKIP
      monthly_transaction_count =
        hash.key?('MonthlyTransactionCount') ? hash['MonthlyTransactionCount'] : SKIP
      monthly_transaction_accumulated =
        hash.key?('MonthlyTransactionAccumulated') ? hash['MonthlyTransactionAccumulated'] : SKIP
      monthly_transaction_balance =
        hash.key?('MonthlyTransactionBalance') ? hash['MonthlyTransactionBalance'] : SKIP
      monthly_transaction_override =
        hash.key?('MonthlyTransactionOverride') ? hash['MonthlyTransactionOverride'] : SKIP
      monthly_transaction_threshold =
        hash.key?('MonthlyTransactionThreshold') ? hash['MonthlyTransactionThreshold'] : SKIP
      annual_transaction_count =
        hash.key?('AnnualTransactionCount') ? hash['AnnualTransactionCount'] : SKIP
      annual_transaction_accumulated =
        hash.key?('AnnualTransactionAccumulated') ? hash['AnnualTransactionAccumulated'] : SKIP
      annual_transaction_balance =
        hash.key?('AnnualTransactionBalance') ? hash['AnnualTransactionBalance'] : SKIP
      annual_transaction_override =
        hash.key?('AnnualTransactionOverride') ? hash['AnnualTransactionOverride'] : SKIP
      annual_transaction_threshold =
        hash.key?('AnnualTransactionThreshold') ? hash['AnnualTransactionThreshold'] : SKIP
      life_time_transaction_count =
        hash.key?('LifeTimeTransactionCount') ? hash['LifeTimeTransactionCount'] : SKIP
      life_time_transaction_accumulated =
        hash.key?('LifeTimeTransactionAccumulated') ? hash['LifeTimeTransactionAccumulated'] : SKIP
      life_time_transaction_balance =
        hash.key?('LifeTimeTransactionBalance') ? hash['LifeTimeTransactionBalance'] : SKIP
      life_time_transaction_override =
        hash.key?('LifeTimeTransactionOverride') ? hash['LifeTimeTransactionOverride'] : SKIP
      life_time_transaction_threshold =
        hash.key?('LifeTimeTransactionThreshold') ? hash['LifeTimeTransactionThreshold'] : SKIP

      # Create object from extracted values.
      UsageRestriction.new(level,
                           daily_spend,
                           daily_spend_accumulated,
                           daily_spend_balance,
                           daily_spend_override,
                           daily_spend_threshold,
                           weekly_spend,
                           weekly_spend_accumulated,
                           weekly_spend_balance,
                           weekly_spend_override,
                           weekly_spend_threshold,
                           monthly_spend,
                           monthly_spend_accumulated,
                           monthly_spend_balance,
                           monthly_spend_override,
                           per_transaction_spend,
                           per_transaction_spend_override,
                           annual_spend,
                           annual_spend_accumulated,
                           annual_spend_balance,
                           annual_spend_override,
                           annual_spend_threshold,
                           life_time_spend,
                           life_time_spend_accumulated,
                           life_time_spend_balance,
                           life_time_spend_override,
                           life_time_spend_threshold,
                           daily_volume,
                           daily_volume_accumulated,
                           daily_volume_balance,
                           daily_volume_override,
                           daily_volume_threshold,
                           weekly_volume,
                           weekly_volume_accumulated,
                           weekly_volume_balance,
                           weekly_volume_override,
                           weekly_volume_threshold,
                           monthly_volume,
                           monthly_volume_accumulated,
                           monthly_volume_balance,
                           monthly_volume_override,
                           monthly_volume_threshold,
                           per_transaction_volume,
                           per_transaction_volume_override,
                           annual_volume,
                           annual_volume_accumulated,
                           annual_volume_balance,
                           annual_volume_override,
                           annual_volume_threshold,
                           life_time_volume,
                           life_time_volume_accumulated,
                           life_time_volume_balance,
                           life_time_volume_override,
                           life_time_volume_threshold,
                           daily_transaction_count,
                           daily_transaction_accumulated,
                           daily_transaction_balance,
                           daily_transaction_override,
                           daily_transaction_threshold,
                           weekly_transaction_count,
                           weekly_transaction_accumulated,
                           weekly_transaction_balance,
                           weekly_transaction_override,
                           weekly_transaction_threshold,
                           monthly_transaction_count,
                           monthly_transaction_accumulated,
                           monthly_transaction_balance,
                           monthly_transaction_override,
                           monthly_transaction_threshold,
                           annual_transaction_count,
                           annual_transaction_accumulated,
                           annual_transaction_balance,
                           annual_transaction_override,
                           annual_transaction_threshold,
                           life_time_transaction_count,
                           life_time_transaction_accumulated,
                           life_time_transaction_balance,
                           life_time_transaction_override,
                           life_time_transaction_threshold)
    end
  end
end
