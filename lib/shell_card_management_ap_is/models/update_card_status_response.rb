# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # UpdateCardStatusResponse Model.
  class UpdateCardStatusResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique request identifier passed from end user. This identifier helps in
    # tracing a transaction
    # @return [String]
    attr_accessor :request_id

    # Indicates overall status of the request. Allowed values: SUCCESS, FAILED,
    # PARTIAL_SUCCESS
    # @return [String]
    attr_accessor :status

    # Indicates overall status of the request. Allowed values: SUCCESS, FAILED,
    # PARTIAL_SUCCESS
    # @return [Array[SubmittedCard]]
    attr_accessor :data

    # Update status reference number for tracking the execution of the request.
    # <br>Note: Reference will be empty for status 9006 and 9012 i.e., request
    # for all the cards failed.
    # @return [Integer]
    attr_accessor :main_reference

    # Order replacement reference number for tracking the execution of the order
    # replacement cards request. <br/>Note: Reference will be empty for status
    # 9006 and 9012 i.e., request for all the cards failed or if there were no
    # order replacement requested in the input.
    # @return [Integer]
    attr_accessor :order_replacement_reference

    # Order replacement reference number for tracking the execution of the order
    # replacement cards request. <br/>Note: Reference will be empty for status
    # 9006 and 9012 i.e., request for all the cards failed or if there were no
    # order replacement requested in the input.
    # @return [Array[ErrorDetails]]
    attr_accessor :errors

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'RequestId'
      @_hash['status'] = 'Status'
      @_hash['data'] = 'Data'
      @_hash['main_reference'] = 'MainReference'
      @_hash['order_replacement_reference'] = 'OrderReplacementReference'
      @_hash['errors'] = 'Errors'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        status
        data
        main_reference
        order_replacement_reference
        errors
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(request_id = SKIP, status = SKIP, data = SKIP,
                   main_reference = SKIP, order_replacement_reference = SKIP,
                   errors = SKIP)
      @request_id = request_id unless request_id == SKIP
      @status = status unless status == SKIP
      @data = data unless data == SKIP
      @main_reference = main_reference unless main_reference == SKIP
      unless order_replacement_reference == SKIP
        @order_replacement_reference =
          order_replacement_reference
      end
      @errors = errors unless errors == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      # Parameter is an array, so we need to iterate through it
      data = nil
      unless hash['Data'].nil?
        data = []
        hash['Data'].each do |structure|
          data << (SubmittedCard.from_hash(structure) if structure)
        end
      end

      data = SKIP unless hash.key?('Data')
      main_reference = hash.key?('MainReference') ? hash['MainReference'] : SKIP
      order_replacement_reference =
        hash.key?('OrderReplacementReference') ? hash['OrderReplacementReference'] : SKIP
      # Parameter is an array, so we need to iterate through it
      errors = nil
      unless hash['Errors'].nil?
        errors = []
        hash['Errors'].each do |structure|
          errors << (ErrorDetails.from_hash(structure) if structure)
        end
      end

      errors = SKIP unless hash.key?('Errors')

      # Create object from extracted values.
      UpdateCardStatusResponse.new(request_id,
                                   status,
                                   data,
                                   main_reference,
                                   order_replacement_reference,
                                   errors)
    end
  end
end
