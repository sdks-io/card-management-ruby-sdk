# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # SearchCardResponseRestrictions Model.
  class SearchCardResponseRestrictions < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Day/time restrictions such as weekdays and time range to be applied on the
    # bundle.
    # Mandatory if respective action is set as “Add”.
    # The details of DayTimeRestriction entity is given below.
    # @return [DayTimeRestrictions]
    attr_accessor :day_time_restrictions

    # Location restrictions to be applied on the bundle which either allows or
    # restricts using the cards, which are under the bundle, in the specified
    # locations. 
    # Mandatory if respective action is set as “Add”.
    # Details of location restrictions are given below.
    # @return [LocationRestrictions]
    attr_accessor :location_restrictions

    # Location restrictions to be applied on the bundle which either allows or
    # restricts using the cards, which are under the bundle, in the specified
    # locations. 
    # Mandatory if respective action is set as “Add”.
    # Details of location restrictions are given below.
    # @return [SearchProductRestriction]
    attr_accessor :product_restrictions

    # Location restrictions to be applied on the bundle which either allows or
    # restricts using the cards, which are under the bundle, in the specified
    # locations. 
    # Mandatory if respective action is set as “Add”.
    # Details of location restrictions are given below.
    # @return [UsageRestrictions]
    attr_accessor :usage_restrictions

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['day_time_restrictions'] = 'DayTimeRestrictions'
      @_hash['location_restrictions'] = 'LocationRestrictions'
      @_hash['product_restrictions'] = 'ProductRestrictions'
      @_hash['usage_restrictions'] = 'UsageRestrictions'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        day_time_restrictions
        location_restrictions
        product_restrictions
        usage_restrictions
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(day_time_restrictions = SKIP,
                   location_restrictions = SKIP,
                   product_restrictions = SKIP,
                   usage_restrictions = SKIP)
      @day_time_restrictions = day_time_restrictions unless day_time_restrictions == SKIP
      @location_restrictions = location_restrictions unless location_restrictions == SKIP
      @product_restrictions = product_restrictions unless product_restrictions == SKIP
      @usage_restrictions = usage_restrictions unless usage_restrictions == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      day_time_restrictions = DayTimeRestrictions.from_hash(hash['DayTimeRestrictions']) if
        hash['DayTimeRestrictions']
      location_restrictions = LocationRestrictions.from_hash(hash['LocationRestrictions']) if
        hash['LocationRestrictions']
      product_restrictions = SearchProductRestriction.from_hash(hash['ProductRestrictions']) if
        hash['ProductRestrictions']
      usage_restrictions = UsageRestrictions.from_hash(hash['UsageRestrictions']) if
        hash['UsageRestrictions']

      # Create object from extracted values.
      SearchCardResponseRestrictions.new(day_time_restrictions,
                                         location_restrictions,
                                         product_restrictions,
                                         usage_restrictions)
    end
  end
end
