# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # Encapsulates the details of a Summary response.
  class SummaryResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Total number of active cards for the given search criteria
    # @return [Integer]
    attr_accessor :active_cards

    # Total number of cards for the given search criteria that are permanently
    # blocked (Blocked)
    # @return [Integer]
    attr_accessor :blocked_cards

    # Total number of cards for the given search criteria that are cancelled (at
    # cancelled status) blocked by customer
    # @return [Integer]
    attr_accessor :cancelled_cards

    # Total number of expired cards for the given search criteria
    # @return [Integer]
    attr_accessor :expired_cards

    # Cards that are active and expiring in X days, X should be configurable
    # @return [Integer]
    attr_accessor :expiring_cards

    # Totalnumber of Cards in Fraud status for the given search criteria.
    # @return [Integer]
    attr_accessor :fraud_cards

    # Total number of cards in New status for the given search criteria.
    # @return [Integer]
    attr_accessor :new_cards

    # Total number of Renewal Pending cards for the given search criteria
    # @return [Integer]
    attr_accessor :renewal_pending_cards

    # Cards with status Replaced
    # @return [Integer]
    attr_accessor :replaced_cards

    # Total number of cards for the given search criteria that are temporarily
    # blocked by customer
    # @return [Integer]
    attr_accessor :temporary_block_by_customer

    # Total number of cards for the given search criteria that are temporarily
    # blocked by Shell
    # @return [Integer]
    attr_accessor :temporary_block_by_shell

    # Total number of cards for the given search criteria
    # @return [Integer]
    attr_accessor :total_cards

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['active_cards'] = 'ActiveCards'
      @_hash['blocked_cards'] = 'BlockedCards'
      @_hash['cancelled_cards'] = 'CancelledCards'
      @_hash['expired_cards'] = 'ExpiredCards'
      @_hash['expiring_cards'] = 'ExpiringCards'
      @_hash['fraud_cards'] = 'FraudCards'
      @_hash['new_cards'] = 'NewCards'
      @_hash['renewal_pending_cards'] = 'RenewalPendingCards'
      @_hash['replaced_cards'] = 'ReplacedCards'
      @_hash['temporary_block_by_customer'] = 'TemporaryBlockByCustomer'
      @_hash['temporary_block_by_shell'] = 'TemporaryBlockByShell'
      @_hash['total_cards'] = 'TotalCards'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        active_cards
        blocked_cards
        cancelled_cards
        expired_cards
        expiring_cards
        fraud_cards
        new_cards
        renewal_pending_cards
        replaced_cards
        temporary_block_by_customer
        temporary_block_by_shell
        total_cards
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        active_cards
        blocked_cards
        cancelled_cards
        expired_cards
        expiring_cards
        fraud_cards
        new_cards
        renewal_pending_cards
        replaced_cards
        temporary_block_by_customer
        temporary_block_by_shell
        total_cards
      ]
    end

    def initialize(active_cards = SKIP,
                   blocked_cards = SKIP,
                   cancelled_cards = SKIP,
                   expired_cards = SKIP,
                   expiring_cards = SKIP,
                   fraud_cards = SKIP,
                   new_cards = SKIP,
                   renewal_pending_cards = SKIP,
                   replaced_cards = SKIP,
                   temporary_block_by_customer = SKIP,
                   temporary_block_by_shell = SKIP,
                   total_cards = SKIP)
      @active_cards = active_cards unless active_cards == SKIP
      @blocked_cards = blocked_cards unless blocked_cards == SKIP
      @cancelled_cards = cancelled_cards unless cancelled_cards == SKIP
      @expired_cards = expired_cards unless expired_cards == SKIP
      @expiring_cards = expiring_cards unless expiring_cards == SKIP
      @fraud_cards = fraud_cards unless fraud_cards == SKIP
      @new_cards = new_cards unless new_cards == SKIP
      @renewal_pending_cards = renewal_pending_cards unless renewal_pending_cards == SKIP
      @replaced_cards = replaced_cards unless replaced_cards == SKIP
      unless temporary_block_by_customer == SKIP
        @temporary_block_by_customer =
          temporary_block_by_customer
      end
      @temporary_block_by_shell = temporary_block_by_shell unless temporary_block_by_shell == SKIP
      @total_cards = total_cards unless total_cards == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      active_cards = hash.key?('ActiveCards') ? hash['ActiveCards'] : SKIP
      blocked_cards = hash.key?('BlockedCards') ? hash['BlockedCards'] : SKIP
      cancelled_cards =
        hash.key?('CancelledCards') ? hash['CancelledCards'] : SKIP
      expired_cards = hash.key?('ExpiredCards') ? hash['ExpiredCards'] : SKIP
      expiring_cards = hash.key?('ExpiringCards') ? hash['ExpiringCards'] : SKIP
      fraud_cards = hash.key?('FraudCards') ? hash['FraudCards'] : SKIP
      new_cards = hash.key?('NewCards') ? hash['NewCards'] : SKIP
      renewal_pending_cards =
        hash.key?('RenewalPendingCards') ? hash['RenewalPendingCards'] : SKIP
      replaced_cards = hash.key?('ReplacedCards') ? hash['ReplacedCards'] : SKIP
      temporary_block_by_customer =
        hash.key?('TemporaryBlockByCustomer') ? hash['TemporaryBlockByCustomer'] : SKIP
      temporary_block_by_shell =
        hash.key?('TemporaryBlockByShell') ? hash['TemporaryBlockByShell'] : SKIP
      total_cards = hash.key?('TotalCards') ? hash['TotalCards'] : SKIP

      # Create object from extracted values.
      SummaryResponse.new(active_cards,
                          blocked_cards,
                          cancelled_cards,
                          expired_cards,
                          expiring_cards,
                          fraud_cards,
                          new_cards,
                          renewal_pending_cards,
                          replaced_cards,
                          temporary_block_by_customer,
                          temporary_block_by_shell,
                          total_cards)
    end
  end
end
