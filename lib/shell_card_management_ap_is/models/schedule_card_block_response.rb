# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # ScheduleCardBlockResponse Model.
  class ScheduleCardBlockResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Reference number for tracking the execution of the request.
    # Note: Reference will be empty for status 9006 and 9012 i.e., request for
    # all the cards failed.
    # @return [Integer]
    attr_accessor :main_reference

    # API Request ID
    # @return [String]
    attr_accessor :request_id

    # Overall Status of the API call
    # @return [String]
    attr_accessor :status

    # List of SubmittedScheduleCardBlockCard entity.
    # @return [Array[ScheduleCardBlockResponseDataItems]]
    attr_accessor :data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['main_reference'] = 'MainReference'
      @_hash['request_id'] = 'RequestId'
      @_hash['status'] = 'Status'
      @_hash['data'] = 'Data'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        main_reference
        request_id
        status
        data
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(main_reference = SKIP,
                   request_id = SKIP,
                   status = SKIP,
                   data = SKIP)
      @main_reference = main_reference unless main_reference == SKIP
      @request_id = request_id unless request_id == SKIP
      @status = status unless status == SKIP
      @data = data unless data == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      main_reference = hash.key?('MainReference') ? hash['MainReference'] : SKIP
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      # Parameter is an array, so we need to iterate through it
      data = nil
      unless hash['Data'].nil?
        data = []
        hash['Data'].each do |structure|
          data << (ScheduleCardBlockResponseDataItems.from_hash(structure) if structure)
        end
      end

      data = SKIP unless hash.key?('Data')

      # Create object from extracted values.
      ScheduleCardBlockResponse.new(main_reference,
                                    request_id,
                                    status,
                                    data)
    end
  end
end
