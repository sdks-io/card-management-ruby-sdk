# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # LocationRestrictionsPartnerSiteRestrictionsItems Model.
  class LocationRestrictionsPartnerSiteRestrictionsItems < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Gateway network codes, typically 7 or 10 digits, where sites and site
    # groups belong to.
    # Example: 0002003250
    # Mandatory
    # @return [String]
    attr_accessor :network_code

    # A list of Site IDs in this network which needs to be either restricted or
    # allowed.
    # For example, 97123, 97155
    # A list of values must be passed for either Sites or SiteGroups or both.
    # Max 10 sites are allowed for the Partner site Restriction.
    # @return [Array[String]]
    attr_accessor :sites

    # A list of site group ids in this network which needs to be either
    # restricted or allowed.
    # For example, 83649200
    # A list of values must be passed for either Sites or SiteGroups or both.
    # Max 10 sites groups are allowed for the Partner site Restriction.
    # @return [Array[String]]
    attr_accessor :site_groups

    # Flag indicates whether the profile is inclusive or exclusive.
    # Mandatory
    # Example: False - (inclusive), i.e. the “Sites” & “SiteGroups” properties
    # lists the sites & site groups where the transaction will be allowed.
    # True - (exclusive), i.e. the “Sites” & “SiteGroups” properties lists the
    # sites and site groups where the transactions will be declined.
    # @return [TrueClass | FalseClass]
    attr_accessor :exclusive

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['network_code'] = 'NetworkCode'
      @_hash['sites'] = 'Sites'
      @_hash['site_groups'] = 'SiteGroups'
      @_hash['exclusive'] = 'Exclusive'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        sites
        site_groups
        exclusive
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(network_code = nil,
                   sites = SKIP,
                   site_groups = SKIP,
                   exclusive = SKIP)
      @network_code = network_code
      @sites = sites unless sites == SKIP
      @site_groups = site_groups unless site_groups == SKIP
      @exclusive = exclusive unless exclusive == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      network_code = hash.key?('NetworkCode') ? hash['NetworkCode'] : nil
      sites = hash.key?('Sites') ? hash['Sites'] : SKIP
      site_groups = hash.key?('SiteGroups') ? hash['SiteGroups'] : SKIP
      exclusive = hash.key?('Exclusive') ? hash['Exclusive'] : SKIP

      # Create object from extracted values.
      LocationRestrictionsPartnerSiteRestrictionsItems.new(network_code,
                                                           sites,
                                                           site_groups,
                                                           exclusive)
    end
  end
end
