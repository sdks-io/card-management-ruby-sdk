# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # SummaryOfBundleResponseDataItems Model.
  class SummaryOfBundleResponseDataItems < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Payer Id of the bundles and cards.
    # Example: 123456
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number of the bundles and cards.
    # Example: GB000000123
    # @return [String]
    attr_accessor :payer_number

    # Account ID of the bundle.
    # Example: 123456
    # @return [Integer]
    attr_accessor :account_id

    # Account Number of the bundle.
    # Example: GB000000123
    # @return [String]
    attr_accessor :account_number

    # Count of cards that are not part of the bundle in a given account.
    # @return [Integer]
    attr_accessor :count_of_cards_not_in_bundle

    # List of Card Bundles
    # @return [Array[SummaryOfBundleResponseDataItemsCardBundlesItems]]
    attr_accessor :card_bundles

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['count_of_cards_not_in_bundle'] = 'CountOfCardsNotInBundle'
      @_hash['card_bundles'] = 'CardBundles'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payer_id
        payer_number
        account_id
        account_number
        count_of_cards_not_in_bundle
        card_bundles
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        payer_id
        payer_number
        account_id
        account_number
        count_of_cards_not_in_bundle
      ]
    end

    def initialize(payer_id = SKIP,
                   payer_number = SKIP,
                   account_id = SKIP,
                   account_number = SKIP,
                   count_of_cards_not_in_bundle = SKIP,
                   card_bundles = SKIP)
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      unless count_of_cards_not_in_bundle == SKIP
        @count_of_cards_not_in_bundle =
          count_of_cards_not_in_bundle
      end
      @card_bundles = card_bundles unless card_bundles == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      count_of_cards_not_in_bundle =
        hash.key?('CountOfCardsNotInBundle') ? hash['CountOfCardsNotInBundle'] : SKIP
      # Parameter is an array, so we need to iterate through it
      card_bundles = nil
      unless hash['CardBundles'].nil?
        card_bundles = []
        hash['CardBundles'].each do |structure|
          card_bundles << (SummaryOfBundleResponseDataItemsCardBundlesItems.from_hash(structure) if structure)
        end
      end

      card_bundles = SKIP unless hash.key?('CardBundles')

      # Create object from extracted values.
      SummaryOfBundleResponseDataItems.new(payer_id,
                                           payer_number,
                                           account_id,
                                           account_number,
                                           count_of_cards_not_in_bundle,
                                           card_bundles)
    end
  end
end
