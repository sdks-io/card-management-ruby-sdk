# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # DeliveryAddressUpdateResponse Model.
  class DeliveryAddressUpdateResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Request ID to which was passed on the API request.
    # @return [String]
    attr_accessor :request_id

    # Service reference number for tracking.
    # @return [Integer]
    attr_accessor :service_reference

    # Service reference number for tracking.
    # @return [DeliveryAddressUpdateReferences2]
    attr_accessor :delivery_address_update_references

    # Service reference number for tracking.
    # @return [ErrorStatus]
    attr_accessor :error

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'RequestId'
      @_hash['service_reference'] = 'ServiceReference'
      @_hash['delivery_address_update_references'] =
        'DeliveryAddressUpdateReferences'
      @_hash['error'] = 'Error'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        service_reference
        delivery_address_update_references
        error
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(request_id = SKIP, service_reference = SKIP,
                   delivery_address_update_references = SKIP, error = SKIP)
      @request_id = request_id unless request_id == SKIP
      @service_reference = service_reference unless service_reference == SKIP
      unless delivery_address_update_references == SKIP
        @delivery_address_update_references =
          delivery_address_update_references
      end
      @error = error unless error == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      service_reference =
        hash.key?('ServiceReference') ? hash['ServiceReference'] : SKIP
      if hash['DeliveryAddressUpdateReferences']
        delivery_address_update_references = DeliveryAddressUpdateReferences2.from_hash(hash['DeliveryAddressUpdateReferences'])
      end
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']

      # Create object from extracted values.
      DeliveryAddressUpdateResponse.new(request_id,
                                        service_reference,
                                        delivery_address_update_references,
                                        error)
    end
  end
end
