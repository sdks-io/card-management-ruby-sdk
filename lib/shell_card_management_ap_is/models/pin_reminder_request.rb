# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # This entity models the data that is received in the https request body of
  # the PINReminder operation.
  class PINReminderRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account Id of the customer.<br />
    # Optional if AccountNumber is passed, else Mandatory.<br />
    # This input is a search criterion, if given.
    # @return [Integer]
    attr_accessor :account_id

    # Account Number of the customer.<br />
    # Optional if AccountId is passed, else Mandatory.<br />
    # This input is a search criterion, if given.
    # @return [String]
    attr_accessor :account_number

    # Collecting Company Code (Shell Code) of the selected payer. <br />
    # Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia,
    # Ukraine etc. <br />
    # It is optional for other countries if ColCoID is provided.
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting Company Id of the selected payer<br />
    # Optional if ColCoCode is passed else Mandatory.
    # @return [Integer]
    attr_accessor :col_co_id

    # Payer Id (i.e. Customer Id of the Payment Customer of the selected
    # payer.<br />
    # Optional if PayerNumber is passed else Mandatory
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number (Ex: GB000000123) of the selected payer.<br />
    # Optional if PayerId is passed else Mandatory
    # @return [String]
    attr_accessor :payer_number

    # List of PINReminderCardDetails entity. The fields of this entity are
    # described below.
    # @return [Array[PINReminderCardDetails]]
    attr_accessor :pin_reminder_card_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['pin_reminder_card_details'] = 'PINReminderCardDetails'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_id
        account_number
        col_co_code
        col_co_id
        payer_id
        payer_number
        pin_reminder_card_details
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_id = SKIP, account_number = SKIP, col_co_code = SKIP,
                   col_co_id = SKIP, payer_id = SKIP, payer_number = SKIP,
                   pin_reminder_card_details = SKIP)
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @col_co_id = col_co_id unless col_co_id == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      unless pin_reminder_card_details == SKIP
        @pin_reminder_card_details =
          pin_reminder_card_details
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      # Parameter is an array, so we need to iterate through it
      pin_reminder_card_details = nil
      unless hash['PINReminderCardDetails'].nil?
        pin_reminder_card_details = []
        hash['PINReminderCardDetails'].each do |structure|
          pin_reminder_card_details << (PINReminderCardDetails.from_hash(structure) if structure)
        end
      end

      pin_reminder_card_details = SKIP unless hash.key?('PINReminderCardDetails')

      # Create object from extracted values.
      PINReminderRequest.new(account_id,
                             account_number,
                             col_co_code,
                             col_co_id,
                             payer_id,
                             payer_number,
                             pin_reminder_card_details)
    end
  end
end
