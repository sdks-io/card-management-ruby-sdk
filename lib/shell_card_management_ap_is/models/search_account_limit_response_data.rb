# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # SearchAccountLimitResponseData Model.
  class SearchAccountLimitResponseData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :account_id

    # Account Number
    # @return [String]
    attr_accessor :account_number

    # 3 digit Shell global fuel product code, if already set up.
    # @return [String]
    attr_accessor :reference_product

    # The restriction condition code.
    # @return [String]
    attr_accessor :restriction_condition

    # The restriction condition code.
    # @return [Array[AccountVelocityLimit]]
    attr_accessor :velocity_limits

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['reference_product'] = 'ReferenceProduct'
      @_hash['restriction_condition'] = 'RestrictionCondition'
      @_hash['velocity_limits'] = 'VelocityLimits'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_id
        account_number
        reference_product
        restriction_condition
        velocity_limits
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        account_id
        account_number
        reference_product
        restriction_condition
      ]
    end

    def initialize(account_id = SKIP,
                   account_number = SKIP,
                   reference_product = SKIP,
                   restriction_condition = SKIP,
                   velocity_limits = SKIP)
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @reference_product = reference_product unless reference_product == SKIP
      @restriction_condition = restriction_condition unless restriction_condition == SKIP
      @velocity_limits = velocity_limits unless velocity_limits == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      reference_product =
        hash.key?('ReferenceProduct') ? hash['ReferenceProduct'] : SKIP
      restriction_condition =
        hash.key?('RestrictionCondition') ? hash['RestrictionCondition'] : SKIP
      # Parameter is an array, so we need to iterate through it
      velocity_limits = nil
      unless hash['VelocityLimits'].nil?
        velocity_limits = []
        hash['VelocityLimits'].each do |structure|
          velocity_limits << (AccountVelocityLimit.from_hash(structure) if structure)
        end
      end

      velocity_limits = SKIP unless hash.key?('VelocityLimits')

      # Create object from extracted values.
      SearchAccountLimitResponseData.new(account_id,
                                         account_number,
                                         reference_product,
                                         restriction_condition,
                                         velocity_limits)
    end
  end
end
