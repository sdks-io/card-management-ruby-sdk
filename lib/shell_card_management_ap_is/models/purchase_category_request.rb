# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # PurchaseCategoryRequest Model.
  class PurchaseCategoryRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Mandatory UUID (according to RFC 4122 standards) for requests and
    # responses. This will be played back in the response from the request.
    # @return [String]
    attr_accessor :request_id

    # Collecting Company Code (Shell Code).
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting Company Id (in Shell Cards Platform).
    # @return [Integer]
    attr_accessor :col_co_id

    # Card type Id
    # @return [Integer]
    attr_accessor :card_type_id

    # Purchase category Id
    # Optional.
    # Example: 123, 124, etc.,
    # @return [Integer]
    attr_accessor :purchase_category_id

    # Language code for the Title and Description.
    # Language codes should be same as SFH supported language 
    # Optional.
    # Default: en-GB
    # Example:
    # en-GB – English (UK)
    # nl-NL – Dutch (Netherlands)
    # @return [String]
    attr_accessor :language_code

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'RequestId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['card_type_id'] = 'CardTypeId'
      @_hash['purchase_category_id'] = 'PurchaseCategoryId'
      @_hash['language_code'] = 'LanguageCode'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        col_co_code
        col_co_id
        card_type_id
        purchase_category_id
        language_code
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_code
        col_co_id
        card_type_id
      ]
    end

    def initialize(request_id = SKIP,
                   col_co_code = SKIP,
                   col_co_id = SKIP,
                   card_type_id = SKIP,
                   purchase_category_id = SKIP,
                   language_code = SKIP)
      @request_id = request_id unless request_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @col_co_id = col_co_id unless col_co_id == SKIP
      @card_type_id = card_type_id unless card_type_id == SKIP
      @purchase_category_id = purchase_category_id unless purchase_category_id == SKIP
      @language_code = language_code unless language_code == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      card_type_id = hash.key?('CardTypeId') ? hash['CardTypeId'] : SKIP
      purchase_category_id =
        hash.key?('PurchaseCategoryId') ? hash['PurchaseCategoryId'] : SKIP
      language_code = hash.key?('LanguageCode') ? hash['LanguageCode'] : SKIP

      # Create object from extracted values.
      PurchaseCategoryRequest.new(request_id,
                                  col_co_code,
                                  col_co_id,
                                  card_type_id,
                                  purchase_category_id,
                                  language_code)
    end
  end
end
