# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # BundleRestriction Model.
  class BundleRestriction < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # True/False
    # A value indicates if the day/time restriction is to be reset for card
    # bundle.
    # Optional
    # Default value is False.
    # @return [TrueClass | FalseClass]
    attr_accessor :reset_day_time_restriction

    # True/False
    # A value indicates if the location restriction is to be reset for card
    # bundle.
    # Optional
    # Default value is False.
    # @return [TrueClass | FalseClass]
    attr_accessor :reset_location_restriction

    # True/False
    # A value indicates if the product restriction is to be reset for card
    # bundle.
    # Optional
    # Default value is False.
    # @return [TrueClass | FalseClass]
    attr_accessor :reset_product_restriction

    # True/False
    # A value indicates if the product restriction is to be reset for card
    # bundle.
    # Optional
    # Default value is False.
    # @return [UsageRestrictions]
    attr_accessor :usage_restrictions

    # Day/time restrictions such as weekdays and time range to be applied on the
    # bundle.
    # Mandatory if respective action is set as “Add”.
    # The details of DayTimeRestriction entity is given below.
    # @return [DayTimeRestrictions]
    attr_accessor :day_time_restrictions

    # Day/time restrictions such as weekdays and time range to be applied on the
    # bundle.
    # Mandatory if respective action is set as “Add”.
    # The details of DayTimeRestriction entity is given below.
    # @return [ProductRestrictions]
    attr_accessor :product_restriction

    # Identifier of the location restriction profile to be updated for the
    # bundle in Gateway.
    # Optional
    # @return [String]
    attr_accessor :location_restriction_profile_id

    # Location restrictions to be applied on the bundle which either allows or
    # restricts using the cards, which are under the bundle, in the specified
    # locations. 
    # Mandatory if respective action is set as “Add”.
    # Details of location restrictions are given below.
    # @return [LocationRestrictions]
    attr_accessor :location_restrictions

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['reset_day_time_restriction'] = 'ResetDayTimeRestriction'
      @_hash['reset_location_restriction'] = 'ResetLocationRestriction'
      @_hash['reset_product_restriction'] = 'ResetProductRestriction'
      @_hash['usage_restrictions'] = 'UsageRestrictions'
      @_hash['day_time_restrictions'] = 'DayTimeRestrictions'
      @_hash['product_restriction'] = 'ProductRestriction'
      @_hash['location_restriction_profile_id'] =
        'LocationRestrictionProfileId'
      @_hash['location_restrictions'] = 'LocationRestrictions'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        reset_day_time_restriction
        reset_location_restriction
        reset_product_restriction
        usage_restrictions
        day_time_restrictions
        product_restriction
        location_restriction_profile_id
        location_restrictions
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(reset_day_time_restriction = false,
                   reset_location_restriction = false,
                   reset_product_restriction = false,
                   usage_restrictions = SKIP,
                   day_time_restrictions = SKIP,
                   product_restriction = SKIP,
                   location_restriction_profile_id = SKIP,
                   location_restrictions = SKIP)
      unless reset_day_time_restriction == SKIP
        @reset_day_time_restriction =
          reset_day_time_restriction
      end
      unless reset_location_restriction == SKIP
        @reset_location_restriction =
          reset_location_restriction
      end
      unless reset_product_restriction == SKIP
        @reset_product_restriction =
          reset_product_restriction
      end
      @usage_restrictions = usage_restrictions unless usage_restrictions == SKIP
      @day_time_restrictions = day_time_restrictions unless day_time_restrictions == SKIP
      @product_restriction = product_restriction unless product_restriction == SKIP
      unless location_restriction_profile_id == SKIP
        @location_restriction_profile_id =
          location_restriction_profile_id
      end
      @location_restrictions = location_restrictions unless location_restrictions == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      reset_day_time_restriction = hash['ResetDayTimeRestriction'] ||= false
      reset_location_restriction = hash['ResetLocationRestriction'] ||= false
      reset_product_restriction = hash['ResetProductRestriction'] ||= false
      usage_restrictions = UsageRestrictions.from_hash(hash['UsageRestrictions']) if
        hash['UsageRestrictions']
      day_time_restrictions = DayTimeRestrictions.from_hash(hash['DayTimeRestrictions']) if
        hash['DayTimeRestrictions']
      product_restriction = ProductRestrictions.from_hash(hash['ProductRestriction']) if
        hash['ProductRestriction']
      location_restriction_profile_id =
        hash.key?('LocationRestrictionProfileId') ? hash['LocationRestrictionProfileId'] : SKIP
      location_restrictions = LocationRestrictions.from_hash(hash['LocationRestrictions']) if
        hash['LocationRestrictions']

      # Create object from extracted values.
      BundleRestriction.new(reset_day_time_restriction,
                            reset_location_restriction,
                            reset_product_restriction,
                            usage_restrictions,
                            day_time_restrictions,
                            product_restriction,
                            location_restriction_profile_id,
                            location_restrictions)
    end
  end
end
