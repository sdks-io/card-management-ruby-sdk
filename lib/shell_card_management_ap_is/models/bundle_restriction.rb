# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # BundleRestriction Model.
  class BundleRestriction < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The value indicates what actions to be performed with respect to day time
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No Day/Time restriction will be applied on the bundle in
    # Gateway.
    # @return [String]
    attr_accessor :day_time_restriction_action

    # The value indicates what actions to be performed with respect to location
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No location restriction will be applied on the bundle in
    # Gateway.
    # @return [String]
    attr_accessor :location_restriction_action

    # The value indicates what actions to be performed with respect to location
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No location restriction will be applied on the bundle in
    # Gateway.
    # @return [Object]
    attr_accessor :usage_restrictions

    # The value indicates what actions to be performed with respect to location
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No location restriction will be applied on the bundle in
    # Gateway.
    # @return [DayTimeRestrictions]
    attr_accessor :day_time_restrictions

    # The value indicates what actions to be performed with respect to location
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No location restriction will be applied on the bundle in
    # Gateway.
    # @return [Object]
    attr_accessor :product_restrictions

    # The value indicates what actions to be performed with respect to location
    # restriction. 
    # Mandatory
    # Allowed values –
    # •    Add: Apply the given restriction on the bundle.
    # •    Default: No location restriction will be applied on the bundle in
    # Gateway.
    # @return [LocationRestriction]
    attr_accessor :location_restrictions

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['day_time_restriction_action'] = 'DayTimeRestrictionAction'
      @_hash['location_restriction_action'] = 'LocationRestrictionAction'
      @_hash['usage_restrictions'] = 'UsageRestrictions'
      @_hash['day_time_restrictions'] = 'DayTimeRestrictions'
      @_hash['product_restrictions'] = 'ProductRestrictions'
      @_hash['location_restrictions'] = 'LocationRestrictions'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        day_time_restriction_action
        location_restriction_action
        usage_restrictions
        day_time_restrictions
        product_restrictions
        location_restrictions
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        day_time_restriction_action
        location_restriction_action
      ]
    end

    def initialize(day_time_restriction_action = SKIP,
                   location_restriction_action = SKIP,
                   usage_restrictions = SKIP, day_time_restrictions = SKIP,
                   product_restrictions = SKIP, location_restrictions = SKIP)
      unless day_time_restriction_action == SKIP
        @day_time_restriction_action =
          day_time_restriction_action
      end
      unless location_restriction_action == SKIP
        @location_restriction_action =
          location_restriction_action
      end
      @usage_restrictions = usage_restrictions unless usage_restrictions == SKIP
      @day_time_restrictions = day_time_restrictions unless day_time_restrictions == SKIP
      @product_restrictions = product_restrictions unless product_restrictions == SKIP
      @location_restrictions = location_restrictions unless location_restrictions == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      day_time_restriction_action =
        hash.key?('DayTimeRestrictionAction') ? hash['DayTimeRestrictionAction'] : SKIP
      location_restriction_action =
        hash.key?('LocationRestrictionAction') ? hash['LocationRestrictionAction'] : SKIP
      usage_restrictions =
        hash.key?('UsageRestrictions') ? hash['UsageRestrictions'] : SKIP
      day_time_restrictions = DayTimeRestrictions.from_hash(hash['DayTimeRestrictions']) if
        hash['DayTimeRestrictions']
      product_restrictions =
        hash.key?('ProductRestrictions') ? hash['ProductRestrictions'] : SKIP
      location_restrictions = LocationRestriction.from_hash(hash['LocationRestrictions']) if
        hash['LocationRestrictions']

      # Create object from extracted values.
      BundleRestriction.new(day_time_restriction_action,
                            location_restriction_action,
                            usage_restrictions,
                            day_time_restrictions,
                            product_restrictions,
                            location_restrictions)
    end
  end
end
