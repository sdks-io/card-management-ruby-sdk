# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # List of cards for delivery address update. Maximum number of cards that can
  # be provided in the list is 50
  class DeliveryAddressUpdate < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Card Id of the card.
    # Optional if  PAN is passed, else Mandatory.
    # @return [Integer]
    attr_accessor :card_id

    # PAN of the card.
    # Optional if CardId is passed, else Mandatory. 
    # Note: -
    # PAN & ExpiryDate parameters will be considered only if CardId & PANID are
    # not provided.
    # @return [String]
    attr_accessor :pan

    # Expiry date of the card.
    # Mandatory if PAN is passed, else optional.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :card_expiry_date

    # Whether to use the default delivery address configured at customer (or
    # card group) level as the delivery address for this card.
    # Mandatory
    # Note: If value is false then ‘UpdateCardRenewalAddress’ is mandatory. If
    # value set to ‘True’ then
    # ‘UpdateCardRenewalAddress’ may be null/empty. It will be ignored if
    # provided.
    # @return [TrueClass | FalseClass]
    attr_accessor :use_customer_default_address

    # Delivery address of card. This address will be used for card reissue and
    # PIN reminders in future.
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # @return [UpdateCardRenewalAddress]
    attr_accessor :update_card_renewal_address

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['card_id'] = 'CardId'
      @_hash['pan'] = 'PAN'
      @_hash['card_expiry_date'] = 'CardExpiryDate'
      @_hash['use_customer_default_address'] = 'UseCustomerDefaultAddress'
      @_hash['update_card_renewal_address'] = 'UpdateCardRenewalAddress'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        card_id
        pan
        card_expiry_date
        update_card_renewal_address
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(use_customer_default_address = false,
                   card_id = SKIP,
                   pan = SKIP,
                   card_expiry_date = SKIP,
                   update_card_renewal_address = SKIP)
      @card_id = card_id unless card_id == SKIP
      @pan = pan unless pan == SKIP
      @card_expiry_date = card_expiry_date unless card_expiry_date == SKIP
      @use_customer_default_address = use_customer_default_address
      unless update_card_renewal_address == SKIP
        @update_card_renewal_address =
          update_card_renewal_address
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      use_customer_default_address = hash['UseCustomerDefaultAddress'] ||= false
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      pan = hash.key?('PAN') ? hash['PAN'] : SKIP
      card_expiry_date =
        hash.key?('CardExpiryDate') ? hash['CardExpiryDate'] : SKIP
      if hash['UpdateCardRenewalAddress']
        update_card_renewal_address = UpdateCardRenewalAddress.from_hash(hash['UpdateCardRenewalAddress'])
      end

      # Create object from extracted values.
      DeliveryAddressUpdate.new(use_customer_default_address,
                                card_id,
                                pan,
                                card_expiry_date,
                                update_card_renewal_address)
    end
  end
end
