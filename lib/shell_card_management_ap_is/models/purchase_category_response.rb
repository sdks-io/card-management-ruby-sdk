# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # PurchaseCategoryResponse Model.
  class PurchaseCategoryResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[PurchaseCategory1AllOf0]]
    attr_accessor :purchase_categories

    # TODO: Write general description for this method
    # @return [ErrorStatus]
    attr_accessor :error

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['purchase_categories'] = 'PurchaseCategories'
      @_hash['error'] = 'Error'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        purchase_categories
        error
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(purchase_categories = SKIP,
                   error = SKIP)
      @purchase_categories = purchase_categories unless purchase_categories == SKIP
      @error = error unless error == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      purchase_categories = nil
      unless hash['PurchaseCategories'].nil?
        purchase_categories = []
        hash['PurchaseCategories'].each do |structure|
          purchase_categories << (PurchaseCategory1AllOf0.from_hash(structure) if structure)
        end
      end

      purchase_categories = SKIP unless hash.key?('PurchaseCategories')
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']

      # Create object from extracted values.
      PurchaseCategoryResponse.new(purchase_categories,
                                   error)
    end
  end
end
