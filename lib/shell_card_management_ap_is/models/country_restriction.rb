# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # CountryRestriction Model.
  class CountryRestriction < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A list of ISO 3166-1 Numeric-3 country codes.
    # Example: 826 for United Kingdom.
    # @return [Array[String]]
    attr_accessor :countries

    # Flag indicates whether the profile is inclusive or exclusive.
    # Example: False - (inclusive), i.e. the “Countries” property lists the
    # countries where the transactions will be allowed.
    # True - (exclusive), i.e. the “Countries” property lists the countries
    # where the transactions will be declined.
    # @return [TrueClass | FalseClass]
    attr_accessor :exclusive

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['countries'] = 'Countries'
      @_hash['exclusive'] = 'Exclusive'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        countries
        exclusive
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(countries = SKIP, exclusive = SKIP)
      @countries = countries unless countries == SKIP
      @exclusive = exclusive unless exclusive == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      countries = hash.key?('Countries') ? hash['Countries'] : SKIP
      exclusive = hash.key?('Exclusive') ? hash['Exclusive'] : SKIP

      # Create object from extracted values.
      CountryRestriction.new(countries,
                             exclusive)
    end
  end
end
