# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # CardDetailsRequest Model.
  class CardDetailsRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting Company Id  of the selected payer. 
    # Optional if ColCoCode is passed else Mandatory.
    # Example:
    # 1-Philippines
    # 5-UK
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting Company Code (Shell Code) of the selected payer. 
    # Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia,
    # Ukraine etc. It is optional for other countries if ColCoID is provided.
    # Example:
    # 86-Philippines
    # 5-UK
    # @return [Integer]
    attr_accessor :col_co_id

    # ISO Country code of collecting company
    # @return [String]
    attr_accessor :col_co_country_code

    # Customer reference number of the card.
    # Optional
    # @return [String]
    attr_accessor :client_reference_id

    # Payer Number of the selected payer.
    # @return [String]
    attr_accessor :payer_number

    # Payer Id (i.e. Customer Id of the Payment of the selected payer.
    # @return [Integer]
    attr_accessor :payer_id

    # Account Number of the customer.
    # Optional if AccountId is passed, else mandatory.
    # @return [String]
    attr_accessor :account_number

    # Account ID of the customer.
    # Optional if AccountNumber is passed, else mandatory.
    # @return [Integer]
    attr_accessor :account_id

    # PAN of the card.
    # Optional if CardId is passed, else Mandatory.
    # @return [String]
    attr_accessor :pan

    # Card Id of the card.
    # Optional if PAN is passed, else Mandatory.
    # @return [Integer]
    attr_accessor :card_id

    # Token Type ID for the Card
    # Optional
    # @return [Integer]
    attr_accessor :token_type_id

    # Token Type name for the Card
    # Optional
    # @return [String]
    attr_accessor :token_type_name

    # Card Creation Date time
    # Optional
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :creation_date

    # Effective date for the Card
    # Optional
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :effective_date

    # When the value is True, API will return bundle Id associated with card in
    # the response, if available.
    # Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response
    # is expected when set to ‘True’.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_bundle_details

    # A flag which indicates if the response can contain intermediate statuses
    # @return [TrueClass | FalseClass]
    attr_accessor :include_intermediate_status

    # A flag which indicates if the response can contain scheduled card blocks
    # details
    # @return [TrueClass | FalseClass]
    attr_accessor :include_scheduled_card_blocks

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['col_co_country_code'] = 'ColCoCountryCode'
      @_hash['client_reference_id'] = 'ClientReferenceId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payer_id'] = 'PayerId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['account_id'] = 'AccountId'
      @_hash['pan'] = 'PAN'
      @_hash['card_id'] = 'CardId'
      @_hash['token_type_id'] = 'TokenTypeID'
      @_hash['token_type_name'] = 'TokenTypeName'
      @_hash['creation_date'] = 'CreationDate'
      @_hash['effective_date'] = 'EffectiveDate'
      @_hash['include_bundle_details'] = 'IncludeBundleDetails'
      @_hash['include_intermediate_status'] = 'IncludeIntermediateStatus'
      @_hash['include_scheduled_card_blocks'] = 'IncludeScheduledCardBlocks'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_code
        col_co_id
        col_co_country_code
        client_reference_id
        payer_number
        payer_id
        account_number
        account_id
        pan
        card_id
        token_type_id
        token_type_name
        creation_date
        effective_date
        include_bundle_details
        include_intermediate_status
        include_scheduled_card_blocks
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        col_co_country_code
        client_reference_id
        payer_number
        payer_id
        account_number
        account_id
        pan
        card_id
        token_type_id
        token_type_name
        creation_date
        effective_date
      ]
    end

    def initialize(col_co_code = SKIP, col_co_id = SKIP,
                   col_co_country_code = SKIP, client_reference_id = SKIP,
                   payer_number = SKIP, payer_id = SKIP, account_number = SKIP,
                   account_id = SKIP, pan = SKIP, card_id = SKIP,
                   token_type_id = SKIP, token_type_name = SKIP,
                   creation_date = SKIP, effective_date = SKIP,
                   include_bundle_details = SKIP,
                   include_intermediate_status = SKIP,
                   include_scheduled_card_blocks = SKIP)
      @col_co_code = col_co_code unless col_co_code == SKIP
      @col_co_id = col_co_id unless col_co_id == SKIP
      @col_co_country_code = col_co_country_code unless col_co_country_code == SKIP
      @client_reference_id = client_reference_id unless client_reference_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_id = account_id unless account_id == SKIP
      @pan = pan unless pan == SKIP
      @card_id = card_id unless card_id == SKIP
      @token_type_id = token_type_id unless token_type_id == SKIP
      @token_type_name = token_type_name unless token_type_name == SKIP
      @creation_date = creation_date unless creation_date == SKIP
      @effective_date = effective_date unless effective_date == SKIP
      @include_bundle_details = include_bundle_details unless include_bundle_details == SKIP
      unless include_intermediate_status == SKIP
        @include_intermediate_status =
          include_intermediate_status
      end
      unless include_scheduled_card_blocks == SKIP
        @include_scheduled_card_blocks =
          include_scheduled_card_blocks
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      col_co_country_code =
        hash.key?('ColCoCountryCode') ? hash['ColCoCountryCode'] : SKIP
      client_reference_id =
        hash.key?('ClientReferenceId') ? hash['ClientReferenceId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      pan = hash.key?('PAN') ? hash['PAN'] : SKIP
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      token_type_id = hash.key?('TokenTypeID') ? hash['TokenTypeID'] : SKIP
      token_type_name =
        hash.key?('TokenTypeName') ? hash['TokenTypeName'] : SKIP
      creation_date = hash.key?('CreationDate') ? hash['CreationDate'] : SKIP
      effective_date = hash.key?('EffectiveDate') ? hash['EffectiveDate'] : SKIP
      include_bundle_details =
        hash.key?('IncludeBundleDetails') ? hash['IncludeBundleDetails'] : SKIP
      include_intermediate_status =
        hash.key?('IncludeIntermediateStatus') ? hash['IncludeIntermediateStatus'] : SKIP
      include_scheduled_card_blocks =
        hash.key?('IncludeScheduledCardBlocks') ? hash['IncludeScheduledCardBlocks'] : SKIP

      # Create object from extracted values.
      CardDetailsRequest.new(col_co_code,
                             col_co_id,
                             col_co_country_code,
                             client_reference_id,
                             payer_number,
                             payer_id,
                             account_number,
                             account_id,
                             pan,
                             card_id,
                             token_type_id,
                             token_type_name,
                             creation_date,
                             effective_date,
                             include_bundle_details,
                             include_intermediate_status,
                             include_scheduled_card_blocks)
    end
  end
end
