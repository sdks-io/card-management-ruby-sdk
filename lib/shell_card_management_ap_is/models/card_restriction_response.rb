# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # CardRestrictionResponse Model.
  class CardRestrictionResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Request Id of the API call
    # @return [String]
    attr_accessor :request_id

    # Reference number for tracking the execution of the card restriction
    # requests.
    # @return [Float]
    attr_accessor :restriction_request_reference

    # Reference number for tracking the execution of the card restriction
    # requests.
    # @return [Array[RestrictioncardsRes]]
    attr_accessor :cards

    # Reference number for tracking the execution of the card restriction
    # requests.
    # @return [ErrorStatus]
    attr_accessor :error

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'RequestId'
      @_hash['restriction_request_reference'] = 'RestrictionRequestReference'
      @_hash['cards'] = 'Cards'
      @_hash['error'] = 'Error'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        restriction_request_reference
        cards
        error
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        request_id
      ]
    end

    def initialize(request_id = SKIP, restriction_request_reference = SKIP,
                   cards = SKIP, error = SKIP)
      @request_id = request_id unless request_id == SKIP
      unless restriction_request_reference == SKIP
        @restriction_request_reference =
          restriction_request_reference
      end
      @cards = cards unless cards == SKIP
      @error = error unless error == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      restriction_request_reference =
        hash.key?('RestrictionRequestReference') ? hash['RestrictionRequestReference'] : SKIP
      # Parameter is an array, so we need to iterate through it
      cards = nil
      unless hash['Cards'].nil?
        cards = []
        hash['Cards'].each do |structure|
          cards << (RestrictioncardsRes.from_hash(structure) if structure)
        end
      end

      cards = SKIP unless hash.key?('Cards')
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']

      # Create object from extracted values.
      CardRestrictionResponse.new(request_id,
                                  restriction_request_reference,
                                  cards,
                                  error)
    end
  end
end
