# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # RestrictionSearchCardRequestFilters Model.
  class RestrictionSearchCardRequestFilters < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting Company Code (Shell Code) of the selected payer. 
    # Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia,
    # Ukraine etc. It is optional for other countries if ColCoID is provided.
    # Example:
    # 86 for Philippines
    # 5 for UK
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting Company Id (in GFN) of the selected payer. 
    # Optional if ColCoCode is passed else Mandatory.
    # Example:
    # 1 for Philippines
    # 5 for UK
    # @return [Integer]
    attr_accessor :col_co_id

    # Payer Number of the selected payer.
    # Optional if PayerId is passed else Mandatory
    # Example: GB000000123
    # @return [String]
    attr_accessor :payer_number

    # Payer Id  of the selected payer.
    # Optional if PayerNumber is passed else Mandatory
    # Example: 123456
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Id  of the selected payer.
    # Optional if PayerNumber is passed else Mandatory
    # Example: 123456
    # @return [Accounts]
    attr_accessor :accounts

    # Identifier of the Card bundle in Gateway.
    # Optional if cards list is given, else mandatory.
    # @return [String]
    attr_accessor :bundle_id

    # Identifier of the Card bundle in Gateway.
    # Optional if cards list is given, else mandatory.
    # @return [Array[RestrictionSearchCardRequestFiltersCardsItems]]
    attr_accessor :cards

    # Whether to include location restriction of the cards in the response
    # @return [TrueClass | FalseClass]
    attr_accessor :include_location_restrictions

    # When True: service will return the inherited values for the usage limits
    # (from card-program or account as available) when it is not overridden on
    # the card.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_inherited_limits

    # When the value is True, API will return bundle Id associated with cards in
    # the response, if available. 
    # Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response
    # is expected when set to ‘True’.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_bundle_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payer_id'] = 'PayerId'
      @_hash['accounts'] = 'Accounts'
      @_hash['bundle_id'] = 'BundleId'
      @_hash['cards'] = 'Cards'
      @_hash['include_location_restrictions'] = 'IncludeLocationRestrictions'
      @_hash['include_inherited_limits'] = 'IncludeInheritedLimits'
      @_hash['include_bundle_details'] = 'IncludeBundleDetails'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_code
        col_co_id
        payer_number
        payer_id
        accounts
        bundle_id
        cards
        include_location_restrictions
        include_inherited_limits
        include_bundle_details
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        bundle_id
      ]
    end

    def initialize(col_co_code = SKIP,
                   col_co_id = SKIP,
                   payer_number = SKIP,
                   payer_id = SKIP,
                   accounts = SKIP,
                   bundle_id = SKIP,
                   cards = SKIP,
                   include_location_restrictions = false,
                   include_inherited_limits = false,
                   include_bundle_details = false)
      @col_co_code = col_co_code unless col_co_code == SKIP
      @col_co_id = col_co_id unless col_co_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @accounts = accounts unless accounts == SKIP
      @bundle_id = bundle_id unless bundle_id == SKIP
      @cards = cards unless cards == SKIP
      unless include_location_restrictions == SKIP
        @include_location_restrictions =
          include_location_restrictions
      end
      @include_inherited_limits = include_inherited_limits unless include_inherited_limits == SKIP
      @include_bundle_details = include_bundle_details unless include_bundle_details == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      accounts = Accounts.from_hash(hash['Accounts']) if hash['Accounts']
      bundle_id = hash.key?('BundleId') ? hash['BundleId'] : SKIP
      # Parameter is an array, so we need to iterate through it
      cards = nil
      unless hash['Cards'].nil?
        cards = []
        hash['Cards'].each do |structure|
          cards << (RestrictionSearchCardRequestFiltersCardsItems.from_hash(structure) if structure)
        end
      end

      cards = SKIP unless hash.key?('Cards')
      include_location_restrictions =
        hash['IncludeLocationRestrictions'] ||= false
      include_inherited_limits = hash['IncludeInheritedLimits'] ||= false
      include_bundle_details = hash['IncludeBundleDetails'] ||= false

      # Create object from extracted values.
      RestrictionSearchCardRequestFilters.new(col_co_code,
                                              col_co_id,
                                              payer_number,
                                              payer_id,
                                              accounts,
                                              bundle_id,
                                              cards,
                                              include_location_restrictions,
                                              include_inherited_limits,
                                              include_bundle_details)
    end
  end
end
