# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # Delivery address of card. This address will be used for card reissue and PIN
  # reminders in future. Note: Mandatory when ‘UseCustomerDefaultAddress’ is set
  # to ‘false’. The field is ignored otherwise.
  class UpdateCardRenewalAddress < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Contact name
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # Max Length: 50
    # @return [String]
    attr_accessor :contact_name

    # Title
    # Max Length: 50
    # @return [String]
    attr_accessor :contact_title

    # Company name.
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # Max Length: 50
    # @return [String]
    attr_accessor :company_name

    # Address line 1,2 and 3
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # Max Length: 128
    # Note: -Each address line should be separated by “\r\n”.
    # @return [String]
    attr_accessor :address_line

    # ZipCode
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # Max Length: 10
    # @return [String]
    attr_accessor :zip_code

    # City
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # Max Length: 40
    # @return [String]
    attr_accessor :city

    # Region id of card.
    # @return [Integer]
    attr_accessor :region_id

    # Country ID
    # Note: Mandatory when ‘UseCustomerDefaultAddress’ is set to ‘false’. The
    # field is ignored otherwise.
    # @return [Integer]
    attr_accessor :country_id

    # Email Address
    # Max Length: 90
    # Note: -
    # Based on the international standard that there can be 
    # •	Max Length 64 before the @ (the 'Local part’) =64(minimum of 1)
    # •	Max Lenth after the (the domain) = 88 (Minimum of 2)
    # @return [String]
    attr_accessor :email_address

    # Phone number
    # Optional
    # Max Length: 16
    # @return [String]
    attr_accessor :phone_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['contact_name'] = 'ContactName'
      @_hash['contact_title'] = 'ContactTitle'
      @_hash['company_name'] = 'CompanyName'
      @_hash['address_line'] = 'AddressLine'
      @_hash['zip_code'] = 'ZipCode'
      @_hash['city'] = 'City'
      @_hash['region_id'] = 'RegionID'
      @_hash['country_id'] = 'CountryID'
      @_hash['email_address'] = 'EmailAddress'
      @_hash['phone_number'] = 'PhoneNumber'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        contact_title
        city
        region_id
        email_address
        phone_number
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(contact_name = nil,
                   company_name = nil,
                   address_line = nil,
                   zip_code = nil,
                   country_id = nil,
                   contact_title = SKIP,
                   city = SKIP,
                   region_id = SKIP,
                   email_address = SKIP,
                   phone_number = SKIP)
      @contact_name = contact_name
      @contact_title = contact_title unless contact_title == SKIP
      @company_name = company_name
      @address_line = address_line
      @zip_code = zip_code
      @city = city unless city == SKIP
      @region_id = region_id unless region_id == SKIP
      @country_id = country_id
      @email_address = email_address unless email_address == SKIP
      @phone_number = phone_number unless phone_number == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      contact_name = hash.key?('ContactName') ? hash['ContactName'] : nil
      company_name = hash.key?('CompanyName') ? hash['CompanyName'] : nil
      address_line = hash.key?('AddressLine') ? hash['AddressLine'] : nil
      zip_code = hash.key?('ZipCode') ? hash['ZipCode'] : nil
      country_id = hash.key?('CountryID') ? hash['CountryID'] : nil
      contact_title = hash.key?('ContactTitle') ? hash['ContactTitle'] : SKIP
      city = hash.key?('City') ? hash['City'] : SKIP
      region_id = hash.key?('RegionID') ? hash['RegionID'] : SKIP
      email_address = hash.key?('EmailAddress') ? hash['EmailAddress'] : SKIP
      phone_number = hash.key?('PhoneNumber') ? hash['PhoneNumber'] : SKIP

      # Create object from extracted values.
      UpdateCardRenewalAddress.new(contact_name,
                                   company_name,
                                   address_line,
                                   zip_code,
                                   country_id,
                                   contact_title,
                                   city,
                                   region_id,
                                   email_address,
                                   phone_number)
    end
  end
end
