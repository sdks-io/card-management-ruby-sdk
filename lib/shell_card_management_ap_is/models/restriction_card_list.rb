# shell_card_management_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellCardManagementApIs
  # RestrictionCardList Model.
  class RestrictionCardList < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique Card Id
    # @return [Integer]
    attr_accessor :card_id

    # Card PAN
    # @return [String]
    attr_accessor :pan

    # Expiry date of the card 
    # Format: yyyyMMdd
    # Note: Clients to convert this to appropriate DateTime type.
    # @return [String]
    attr_accessor :expiry_date

    # Card Status id
    # @return [Integer]
    attr_accessor :status_id

    # Status Description (Active, Temporarily Blocked, etc.,)
    # @return [String]
    attr_accessor :status_description

    # Driver name
    # Example:  ANDREW GILBERRY
    # @return [String]
    attr_accessor :driver_name

    # Vehicle registration number
    # Example: MV65YLH
    # @return [String]
    attr_accessor :vrn

    # Issue date
    # Format: yyyyMMdd
    # Note: Clients to convert this to appropriate DateTime type.
    # @return [String]
    attr_accessor :issue_date

    # Issue Number
    # @return [Integer]
    attr_accessor :issue_number

    # Account ID
    # Example: 29484
    # @return [Integer]
    attr_accessor :account_id

    # Account Number
    # Example: GB99215176
    # @return [String]
    attr_accessor :account_number

    # Account Name
    # Example: MATTHEW ALGIE & COMPANY LIMITED
    # @return [String]
    attr_accessor :account_name

    # Account Short Name
    # @return [String]
    attr_accessor :account_short_name

    # ISO currency code of the Customer Currency
    # Example: GBP
    # @return [String]
    attr_accessor :currency_code

    # ISO currency code of the country.
    # Example: GBP
    # @return [String]
    attr_accessor :col_co_currency_code

    # Currency symbol of the country.
    # Example: £, $
    # @return [String]
    attr_accessor :col_co_currency_symbol

    # ISO currency code of the country.
    # Example: GBP
    # @return [String]
    attr_accessor :restriction_currency_code

    # Currency symbol of the country.
    # Example: £, $
    # @return [String]
    attr_accessor :restriction_currency_symbol

    # Purchase category Id
    # Example: 123, 124, etc.,
    # @return [String]
    attr_accessor :purchase_category_id

    # Purchase category code 
    # Example: 
    # 0 - All Fuels (without VP) and Lubricants
    # 1 - FuelSave only
    # 2 - FuelSave and Lubricants
    # 3 - No Restrictions
    # 4 - VP and FuelSave
    # 5 - Diesel ONLY
    # 6 - Diesel and Lubricants
    # 7 - VP and Lubricants
    # 8 - VP and FuelSave and Lubricants
    # @return [String]
    attr_accessor :purchase_category_code

    # Purchase category name 
    # Example: 
    # 0 - All Fuels (without VP) and Lubricants
    # 1 - FuelSave only
    # 2 - FuelSave and Lubricants
    # 3 - No Restrictions
    # 4 - VP and FuelSave
    # 5 - Diesel ONLY
    # 6 - Diesel and Lubricants
    # 7 - VP and Lubricants
    # 8 - VP and FuelSave and Lubricants
    # @return [String]
    attr_accessor :purchase_category_name

    # True/False
    # True if a new card is issued with the same PAN, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_superseded

    # True/False
    # True if it is a virtual card, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_virtual_card

    # True/False
    # True if it is a national card, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_national

    # True/False
    # True if it is an international card, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_international

    # True/False
    # True if it is a CRT type card, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_crt

    # True/False
    # True if it is a Fleet type card, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_fleet

    # True/False
    # True if it is only allowed at Shell sites, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_shell_sites_only

    # True/False
    # True if it is allowed at all partner sites, else false
    # @return [TrueClass | FalseClass]
    attr_accessor :is_partner_sites_included

    # Card Type ID
    # Example Id & Description:
    # 1 - Philippines CRT 7077861
    # 2- Philippines Fleet 7002861
    # 5-SHELL FLEET- HONG KONG 7002821
    # 6-SHELL NHF- HONG KONG 7002821
    # 7-SHELL CRT- HONG KONG 7077821
    # @return [Integer]
    attr_accessor :card_type_id

    # ISO code of the card i.e. first 7 digits of the PAN
    # @return [String]
    attr_accessor :card_type_code

    # Card Type Name
    # Example Id & Description:
    # 1 - Philippines CRT 7077861
    # 2- Philippines Fleet 7002861
    # 5-SHELL FLEET- HONG KONG 7002821
    # 6-SHELL NHF- HONG KONG 7002821
    # 7-SHELL CRT- HONG KONG 7077821
    # @return [String]
    attr_accessor :card_type_name

    # Bundle Id associated with card in the Gateway.
    # This field will have a null value if the card is not associated with any
    # bundle of IncludeBundleDetails in request is false.
    # If the search is based on a bundle Id, the same will be returned.
    # @return [String]
    attr_accessor :bundle_id

    # Id of the medium type identifier.
    # Example: 1,2,4
    # Full list below:
    # 1 - Fuel Card
    # 2 - Fuel Card with EV
    # 4 - Fuel Card and Key fob Card
    # 5 - Key fob
    # 6 - Virtual Card
    # 7 - NPII Token
    # 8 – Smartpay
    # @return [Integer]
    attr_accessor :medium_type_id

    # Name of the medium type identifier.
    # Example: Fuel Card, Fuel Card with EV, Key fob  
    # Full list below:
    # 1 - Fuel Card
    # 2 - Fuel Card with EV
    # 4 - Fuel Card and Key fob Card
    # 5 - Key fob
    # 6 - Virtual Card
    # 7 - NPII Token
    # 8 - Smartpay
    # @return [String]
    attr_accessor :medium_type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['card_id'] = 'CardId'
      @_hash['pan'] = 'PAN'
      @_hash['expiry_date'] = 'ExpiryDate'
      @_hash['status_id'] = 'StatusId'
      @_hash['status_description'] = 'StatusDescription'
      @_hash['driver_name'] = 'DriverName'
      @_hash['vrn'] = 'VRN'
      @_hash['issue_date'] = 'IssueDate'
      @_hash['issue_number'] = 'IssueNumber'
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['account_name'] = 'AccountName'
      @_hash['account_short_name'] = 'AccountShortName'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['col_co_currency_code'] = 'ColCoCurrencyCode'
      @_hash['col_co_currency_symbol'] = 'ColCoCurrencySymbol'
      @_hash['restriction_currency_code'] = 'RestrictionCurrencyCode'
      @_hash['restriction_currency_symbol'] = 'RestrictionCurrencySymbol'
      @_hash['purchase_category_id'] = 'PurchaseCategoryId'
      @_hash['purchase_category_code'] = 'PurchaseCategoryCode'
      @_hash['purchase_category_name'] = 'PurchaseCategoryName'
      @_hash['is_superseded'] = 'IsSuperseded'
      @_hash['is_virtual_card'] = 'IsVirtualCard'
      @_hash['is_national'] = 'IsNational'
      @_hash['is_international'] = 'IsInternational'
      @_hash['is_crt'] = 'IsCRT'
      @_hash['is_fleet'] = 'IsFleet'
      @_hash['is_shell_sites_only'] = 'IsShellSitesOnly'
      @_hash['is_partner_sites_included'] = 'IsPartnerSitesIncluded'
      @_hash['card_type_id'] = 'CardTypeId'
      @_hash['card_type_code'] = 'CardTypeCode'
      @_hash['card_type_name'] = 'CardTypeName'
      @_hash['bundle_id'] = 'BundleId'
      @_hash['medium_type_id'] = 'MediumTypeID'
      @_hash['medium_type'] = 'MediumType'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        card_id
        pan
        expiry_date
        status_id
        status_description
        driver_name
        vrn
        issue_date
        issue_number
        account_id
        account_number
        account_name
        account_short_name
        currency_code
        col_co_currency_code
        col_co_currency_symbol
        restriction_currency_code
        restriction_currency_symbol
        purchase_category_id
        purchase_category_code
        purchase_category_name
        is_superseded
        is_virtual_card
        is_national
        is_international
        is_crt
        is_fleet
        is_shell_sites_only
        is_partner_sites_included
        card_type_id
        card_type_code
        card_type_name
        bundle_id
        medium_type_id
        medium_type
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(card_id = SKIP, pan = SKIP, expiry_date = SKIP,
                   status_id = SKIP, status_description = SKIP,
                   driver_name = SKIP, vrn = SKIP, issue_date = SKIP,
                   issue_number = SKIP, account_id = SKIP,
                   account_number = SKIP, account_name = SKIP,
                   account_short_name = SKIP, currency_code = SKIP,
                   col_co_currency_code = SKIP, col_co_currency_symbol = SKIP,
                   restriction_currency_code = SKIP,
                   restriction_currency_symbol = SKIP,
                   purchase_category_id = SKIP, purchase_category_code = SKIP,
                   purchase_category_name = SKIP, is_superseded = SKIP,
                   is_virtual_card = SKIP, is_national = SKIP,
                   is_international = SKIP, is_crt = SKIP, is_fleet = SKIP,
                   is_shell_sites_only = SKIP, is_partner_sites_included = SKIP,
                   card_type_id = SKIP, card_type_code = SKIP,
                   card_type_name = SKIP, bundle_id = SKIP,
                   medium_type_id = SKIP, medium_type = SKIP)
      @card_id = card_id unless card_id == SKIP
      @pan = pan unless pan == SKIP
      @expiry_date = expiry_date unless expiry_date == SKIP
      @status_id = status_id unless status_id == SKIP
      @status_description = status_description unless status_description == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      @vrn = vrn unless vrn == SKIP
      @issue_date = issue_date unless issue_date == SKIP
      @issue_number = issue_number unless issue_number == SKIP
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_name = account_name unless account_name == SKIP
      @account_short_name = account_short_name unless account_short_name == SKIP
      @currency_code = currency_code unless currency_code == SKIP
      @col_co_currency_code = col_co_currency_code unless col_co_currency_code == SKIP
      @col_co_currency_symbol = col_co_currency_symbol unless col_co_currency_symbol == SKIP
      unless restriction_currency_code == SKIP
        @restriction_currency_code =
          restriction_currency_code
      end
      unless restriction_currency_symbol == SKIP
        @restriction_currency_symbol =
          restriction_currency_symbol
      end
      @purchase_category_id = purchase_category_id unless purchase_category_id == SKIP
      @purchase_category_code = purchase_category_code unless purchase_category_code == SKIP
      @purchase_category_name = purchase_category_name unless purchase_category_name == SKIP
      @is_superseded = is_superseded unless is_superseded == SKIP
      @is_virtual_card = is_virtual_card unless is_virtual_card == SKIP
      @is_national = is_national unless is_national == SKIP
      @is_international = is_international unless is_international == SKIP
      @is_crt = is_crt unless is_crt == SKIP
      @is_fleet = is_fleet unless is_fleet == SKIP
      @is_shell_sites_only = is_shell_sites_only unless is_shell_sites_only == SKIP
      unless is_partner_sites_included == SKIP
        @is_partner_sites_included =
          is_partner_sites_included
      end
      @card_type_id = card_type_id unless card_type_id == SKIP
      @card_type_code = card_type_code unless card_type_code == SKIP
      @card_type_name = card_type_name unless card_type_name == SKIP
      @bundle_id = bundle_id unless bundle_id == SKIP
      @medium_type_id = medium_type_id unless medium_type_id == SKIP
      @medium_type = medium_type unless medium_type == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      pan = hash.key?('PAN') ? hash['PAN'] : SKIP
      expiry_date = hash.key?('ExpiryDate') ? hash['ExpiryDate'] : SKIP
      status_id = hash.key?('StatusId') ? hash['StatusId'] : SKIP
      status_description =
        hash.key?('StatusDescription') ? hash['StatusDescription'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      vrn = hash.key?('VRN') ? hash['VRN'] : SKIP
      issue_date = hash.key?('IssueDate') ? hash['IssueDate'] : SKIP
      issue_number = hash.key?('IssueNumber') ? hash['IssueNumber'] : SKIP
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      account_name = hash.key?('AccountName') ? hash['AccountName'] : SKIP
      account_short_name =
        hash.key?('AccountShortName') ? hash['AccountShortName'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      col_co_currency_code =
        hash.key?('ColCoCurrencyCode') ? hash['ColCoCurrencyCode'] : SKIP
      col_co_currency_symbol =
        hash.key?('ColCoCurrencySymbol') ? hash['ColCoCurrencySymbol'] : SKIP
      restriction_currency_code =
        hash.key?('RestrictionCurrencyCode') ? hash['RestrictionCurrencyCode'] : SKIP
      restriction_currency_symbol =
        hash.key?('RestrictionCurrencySymbol') ? hash['RestrictionCurrencySymbol'] : SKIP
      purchase_category_id =
        hash.key?('PurchaseCategoryId') ? hash['PurchaseCategoryId'] : SKIP
      purchase_category_code =
        hash.key?('PurchaseCategoryCode') ? hash['PurchaseCategoryCode'] : SKIP
      purchase_category_name =
        hash.key?('PurchaseCategoryName') ? hash['PurchaseCategoryName'] : SKIP
      is_superseded = hash.key?('IsSuperseded') ? hash['IsSuperseded'] : SKIP
      is_virtual_card =
        hash.key?('IsVirtualCard') ? hash['IsVirtualCard'] : SKIP
      is_national = hash.key?('IsNational') ? hash['IsNational'] : SKIP
      is_international =
        hash.key?('IsInternational') ? hash['IsInternational'] : SKIP
      is_crt = hash.key?('IsCRT') ? hash['IsCRT'] : SKIP
      is_fleet = hash.key?('IsFleet') ? hash['IsFleet'] : SKIP
      is_shell_sites_only =
        hash.key?('IsShellSitesOnly') ? hash['IsShellSitesOnly'] : SKIP
      is_partner_sites_included =
        hash.key?('IsPartnerSitesIncluded') ? hash['IsPartnerSitesIncluded'] : SKIP
      card_type_id = hash.key?('CardTypeId') ? hash['CardTypeId'] : SKIP
      card_type_code = hash.key?('CardTypeCode') ? hash['CardTypeCode'] : SKIP
      card_type_name = hash.key?('CardTypeName') ? hash['CardTypeName'] : SKIP
      bundle_id = hash.key?('BundleId') ? hash['BundleId'] : SKIP
      medium_type_id = hash.key?('MediumTypeID') ? hash['MediumTypeID'] : SKIP
      medium_type = hash.key?('MediumType') ? hash['MediumType'] : SKIP

      # Create object from extracted values.
      RestrictionCardList.new(card_id,
                              pan,
                              expiry_date,
                              status_id,
                              status_description,
                              driver_name,
                              vrn,
                              issue_date,
                              issue_number,
                              account_id,
                              account_number,
                              account_name,
                              account_short_name,
                              currency_code,
                              col_co_currency_code,
                              col_co_currency_symbol,
                              restriction_currency_code,
                              restriction_currency_symbol,
                              purchase_category_id,
                              purchase_category_code,
                              purchase_category_name,
                              is_superseded,
                              is_virtual_card,
                              is_national,
                              is_international,
                              is_crt,
                              is_fleet,
                              is_shell_sites_only,
                              is_partner_sites_included,
                              card_type_id,
                              card_type_code,
                              card_type_name,
                              bundle_id,
                              medium_type_id,
                              medium_type)
    end
  end
end
